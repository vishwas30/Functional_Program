{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-95547d3f59a7574c.js","index.js","node_modules/ramda/es/index.js","node_modules/ramda/es/F.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/ramda/es/T.js","node_modules/ramda/es/__.js","node_modules/ramda/es/add.js","node_modules/ramda/es/internal/_curry2.js","node_modules/ramda/es/internal/_curry1.js","node_modules/ramda/es/internal/_isPlaceholder.js","node_modules/ramda/es/addIndex.js","node_modules/ramda/es/internal/_concat.js","node_modules/ramda/es/curryN.js","node_modules/ramda/es/internal/_arity.js","node_modules/ramda/es/internal/_curryN.js","node_modules/ramda/es/adjust.js","node_modules/ramda/es/internal/_curry3.js","node_modules/ramda/es/all.js","node_modules/ramda/es/internal/_dispatchable.js","node_modules/ramda/es/internal/_isArray.js","node_modules/ramda/es/internal/_isTransformer.js","node_modules/ramda/es/internal/_xall.js","node_modules/ramda/es/internal/_reduced.js","node_modules/ramda/es/internal/_xfBase.js","node_modules/ramda/es/allPass.js","node_modules/ramda/es/max.js","node_modules/ramda/es/pluck.js","node_modules/ramda/es/map.js","node_modules/ramda/es/internal/_map.js","node_modules/ramda/es/internal/_reduce.js","node_modules/ramda/es/internal/_isArrayLike.js","node_modules/ramda/es/internal/_isString.js","node_modules/ramda/es/internal/_xwrap.js","node_modules/ramda/es/bind.js","node_modules/ramda/es/internal/_xmap.js","node_modules/ramda/es/keys.js","node_modules/ramda/es/internal/_has.js","node_modules/ramda/es/internal/_isArguments.js","node_modules/ramda/es/prop.js","node_modules/ramda/es/internal/_isInteger.js","node_modules/ramda/es/nth.js","node_modules/ramda/es/reduce.js","node_modules/ramda/es/always.js","node_modules/ramda/es/and.js","node_modules/ramda/es/any.js","node_modules/ramda/es/internal/_xany.js","node_modules/ramda/es/anyPass.js","node_modules/ramda/es/ap.js","node_modules/ramda/es/aperture.js","node_modules/ramda/es/internal/_aperture.js","node_modules/ramda/es/internal/_xaperture.js","node_modules/ramda/es/append.js","node_modules/ramda/es/apply.js","node_modules/ramda/es/applySpec.js","node_modules/ramda/es/values.js","node_modules/ramda/es/applyTo.js","node_modules/ramda/es/ascend.js","node_modules/ramda/es/assoc.js","node_modules/ramda/es/assocPath.js","node_modules/ramda/es/internal/_assoc.js","node_modules/ramda/es/isNil.js","node_modules/ramda/es/binary.js","node_modules/ramda/es/nAry.js","node_modules/ramda/es/both.js","node_modules/ramda/es/internal/_isFunction.js","node_modules/ramda/es/lift.js","node_modules/ramda/es/liftN.js","node_modules/ramda/es/call.js","node_modules/ramda/es/chain.js","node_modules/ramda/es/internal/_makeFlat.js","node_modules/ramda/es/internal/_xchain.js","node_modules/ramda/es/internal/_flatCat.js","node_modules/ramda/es/internal/_forceReduced.js","node_modules/ramda/es/clamp.js","node_modules/ramda/es/clone.js","node_modules/ramda/es/internal/_clone.js","node_modules/ramda/es/internal/_cloneRegExp.js","node_modules/ramda/es/type.js","node_modules/ramda/es/collectBy.js","node_modules/ramda/es/comparator.js","node_modules/ramda/es/complement.js","node_modules/ramda/es/not.js","node_modules/ramda/es/compose.js","node_modules/ramda/es/pipe.js","node_modules/ramda/es/internal/_pipe.js","node_modules/ramda/es/tail.js","node_modules/ramda/es/internal/_checkForMethod.js","node_modules/ramda/es/slice.js","node_modules/ramda/es/reverse.js","node_modules/ramda/es/composeWith.js","node_modules/ramda/es/pipeWith.js","node_modules/ramda/es/head.js","node_modules/ramda/es/identity.js","node_modules/ramda/es/internal/_identity.js","node_modules/ramda/es/concat.js","node_modules/ramda/es/toString.js","node_modules/ramda/es/internal/_toString.js","node_modules/ramda/es/internal/_includes.js","node_modules/ramda/es/internal/_indexOf.js","node_modules/ramda/es/equals.js","node_modules/ramda/es/internal/_equals.js","node_modules/ramda/es/internal/_arrayFromIterator.js","node_modules/ramda/es/internal/_includesWith.js","node_modules/ramda/es/internal/_functionName.js","node_modules/ramda/es/internal/_objectIs.js","node_modules/ramda/es/internal/_quote.js","node_modules/ramda/es/internal/_toISOString.js","node_modules/ramda/es/reject.js","node_modules/ramda/es/internal/_complement.js","node_modules/ramda/es/filter.js","node_modules/ramda/es/internal/_filter.js","node_modules/ramda/es/internal/_isObject.js","node_modules/ramda/es/internal/_xfilter.js","node_modules/ramda/es/cond.js","node_modules/ramda/es/construct.js","node_modules/ramda/es/constructN.js","node_modules/ramda/es/curry.js","node_modules/ramda/es/converge.js","node_modules/ramda/es/count.js","node_modules/ramda/es/countBy.js","node_modules/ramda/es/reduceBy.js","node_modules/ramda/es/internal/_xreduceBy.js","node_modules/ramda/es/dec.js","node_modules/ramda/es/defaultTo.js","node_modules/ramda/es/descend.js","node_modules/ramda/es/difference.js","node_modules/ramda/es/internal/_Set.js","node_modules/ramda/es/differenceWith.js","node_modules/ramda/es/dissoc.js","node_modules/ramda/es/dissocPath.js","node_modules/ramda/es/internal/_dissoc.js","node_modules/ramda/es/remove.js","node_modules/ramda/es/divide.js","node_modules/ramda/es/drop.js","node_modules/ramda/es/internal/_xdrop.js","node_modules/ramda/es/dropLast.js","node_modules/ramda/es/internal/_dropLast.js","node_modules/ramda/es/take.js","node_modules/ramda/es/internal/_xtake.js","node_modules/ramda/es/internal/_xdropLast.js","node_modules/ramda/es/dropLastWhile.js","node_modules/ramda/es/internal/_dropLastWhile.js","node_modules/ramda/es/internal/_xdropLastWhile.js","node_modules/ramda/es/dropRepeats.js","node_modules/ramda/es/internal/_xdropRepeatsWith.js","node_modules/ramda/es/dropRepeatsWith.js","node_modules/ramda/es/last.js","node_modules/ramda/es/dropWhile.js","node_modules/ramda/es/internal/_xdropWhile.js","node_modules/ramda/es/either.js","node_modules/ramda/es/or.js","node_modules/ramda/es/empty.js","node_modules/ramda/es/internal/_isTypedArray.js","node_modules/ramda/es/endsWith.js","node_modules/ramda/es/takeLast.js","node_modules/ramda/es/eqBy.js","node_modules/ramda/es/eqProps.js","node_modules/ramda/es/evolve.js","node_modules/ramda/es/find.js","node_modules/ramda/es/internal/_xfind.js","node_modules/ramda/es/findIndex.js","node_modules/ramda/es/internal/_xfindIndex.js","node_modules/ramda/es/findLast.js","node_modules/ramda/es/internal/_xfindLast.js","node_modules/ramda/es/findLastIndex.js","node_modules/ramda/es/internal/_xfindLastIndex.js","node_modules/ramda/es/flatten.js","node_modules/ramda/es/flip.js","node_modules/ramda/es/forEach.js","node_modules/ramda/es/forEachObjIndexed.js","node_modules/ramda/es/fromPairs.js","node_modules/ramda/es/groupBy.js","node_modules/ramda/es/groupWith.js","node_modules/ramda/es/gt.js","node_modules/ramda/es/gte.js","node_modules/ramda/es/has.js","node_modules/ramda/es/hasPath.js","node_modules/ramda/es/hasIn.js","node_modules/ramda/es/identical.js","node_modules/ramda/es/ifElse.js","node_modules/ramda/es/inc.js","node_modules/ramda/es/includes.js","node_modules/ramda/es/indexBy.js","node_modules/ramda/es/indexOf.js","node_modules/ramda/es/init.js","node_modules/ramda/es/innerJoin.js","node_modules/ramda/es/insert.js","node_modules/ramda/es/insertAll.js","node_modules/ramda/es/intersection.js","node_modules/ramda/es/uniq.js","node_modules/ramda/es/uniqBy.js","node_modules/ramda/es/internal/_xuniqBy.js","node_modules/ramda/es/intersperse.js","node_modules/ramda/es/into.js","node_modules/ramda/es/internal/_stepCat.js","node_modules/ramda/es/internal/_objectAssign.js","node_modules/ramda/es/objOf.js","node_modules/ramda/es/invert.js","node_modules/ramda/es/invertObj.js","node_modules/ramda/es/invoker.js","node_modules/ramda/es/is.js","node_modules/ramda/es/isEmpty.js","node_modules/ramda/es/join.js","node_modules/ramda/es/juxt.js","node_modules/ramda/es/keysIn.js","node_modules/ramda/es/lastIndexOf.js","node_modules/ramda/es/length.js","node_modules/ramda/es/internal/_isNumber.js","node_modules/ramda/es/lens.js","node_modules/ramda/es/lensIndex.js","node_modules/ramda/es/update.js","node_modules/ramda/es/lensPath.js","node_modules/ramda/es/path.js","node_modules/ramda/es/paths.js","node_modules/ramda/es/lensProp.js","node_modules/ramda/es/lt.js","node_modules/ramda/es/lte.js","node_modules/ramda/es/mapAccum.js","node_modules/ramda/es/mapAccumRight.js","node_modules/ramda/es/mapObjIndexed.js","node_modules/ramda/es/match.js","node_modules/ramda/es/mathMod.js","node_modules/ramda/es/maxBy.js","node_modules/ramda/es/mean.js","node_modules/ramda/es/sum.js","node_modules/ramda/es/median.js","node_modules/ramda/es/memoizeWith.js","node_modules/ramda/es/mergeAll.js","node_modules/ramda/es/mergeDeepLeft.js","node_modules/ramda/es/mergeDeepWithKey.js","node_modules/ramda/es/mergeWithKey.js","node_modules/ramda/es/mergeDeepRight.js","node_modules/ramda/es/mergeDeepWith.js","node_modules/ramda/es/mergeLeft.js","node_modules/ramda/es/mergeRight.js","node_modules/ramda/es/mergeWith.js","node_modules/ramda/es/min.js","node_modules/ramda/es/minBy.js","node_modules/ramda/es/modify.js","node_modules/ramda/es/modifyPath.js","node_modules/ramda/es/internal/_modify.js","node_modules/ramda/es/modulo.js","node_modules/ramda/es/move.js","node_modules/ramda/es/multiply.js","node_modules/ramda/es/partialObject.js","node_modules/ramda/es/negate.js","node_modules/ramda/es/none.js","node_modules/ramda/es/nthArg.js","node_modules/ramda/es/o.js","node_modules/ramda/es/of.js","node_modules/ramda/es/internal/_of.js","node_modules/ramda/es/omit.js","node_modules/ramda/es/on.js","node_modules/ramda/es/once.js","node_modules/ramda/es/otherwise.js","node_modules/ramda/es/internal/_assertPromise.js","node_modules/ramda/es/over.js","node_modules/ramda/es/pair.js","node_modules/ramda/es/partial.js","node_modules/ramda/es/internal/_createPartialApplicator.js","node_modules/ramda/es/partialRight.js","node_modules/ramda/es/partition.js","node_modules/ramda/es/pathEq.js","node_modules/ramda/es/pathOr.js","node_modules/ramda/es/pathSatisfies.js","node_modules/ramda/es/pick.js","node_modules/ramda/es/pickAll.js","node_modules/ramda/es/pickBy.js","node_modules/ramda/es/prepend.js","node_modules/ramda/es/product.js","node_modules/ramda/es/project.js","node_modules/ramda/es/useWith.js","node_modules/ramda/es/promap.js","node_modules/ramda/es/internal/_promap.js","node_modules/ramda/es/internal/_xpromap.js","node_modules/ramda/es/propEq.js","node_modules/ramda/es/propIs.js","node_modules/ramda/es/propOr.js","node_modules/ramda/es/propSatisfies.js","node_modules/ramda/es/props.js","node_modules/ramda/es/range.js","node_modules/ramda/es/reduceRight.js","node_modules/ramda/es/reduceWhile.js","node_modules/ramda/es/reduced.js","node_modules/ramda/es/repeat.js","node_modules/ramda/es/times.js","node_modules/ramda/es/replace.js","node_modules/ramda/es/scan.js","node_modules/ramda/es/sequence.js","node_modules/ramda/es/set.js","node_modules/ramda/es/sort.js","node_modules/ramda/es/sortBy.js","node_modules/ramda/es/sortWith.js","node_modules/ramda/es/split.js","node_modules/ramda/es/splitAt.js","node_modules/ramda/es/splitEvery.js","node_modules/ramda/es/splitWhen.js","node_modules/ramda/es/splitWhenever.js","node_modules/ramda/es/startsWith.js","node_modules/ramda/es/subtract.js","node_modules/ramda/es/symmetricDifference.js","node_modules/ramda/es/symmetricDifferenceWith.js","node_modules/ramda/es/takeLastWhile.js","node_modules/ramda/es/takeWhile.js","node_modules/ramda/es/internal/_xtakeWhile.js","node_modules/ramda/es/tap.js","node_modules/ramda/es/internal/_xtap.js","node_modules/ramda/es/test.js","node_modules/ramda/es/internal/_isRegExp.js","node_modules/ramda/es/andThen.js","node_modules/ramda/es/toLower.js","node_modules/ramda/es/toPairs.js","node_modules/ramda/es/toPairsIn.js","node_modules/ramda/es/toUpper.js","node_modules/ramda/es/transduce.js","node_modules/ramda/es/transpose.js","node_modules/ramda/es/traverse.js","node_modules/ramda/es/trim.js","node_modules/ramda/es/tryCatch.js","node_modules/ramda/es/unapply.js","node_modules/ramda/es/unary.js","node_modules/ramda/es/uncurryN.js","node_modules/ramda/es/unfold.js","node_modules/ramda/es/union.js","node_modules/ramda/es/unionWith.js","node_modules/ramda/es/uniqWith.js","node_modules/ramda/es/internal/_xuniqWith.js","node_modules/ramda/es/unless.js","node_modules/ramda/es/unnest.js","node_modules/ramda/es/until.js","node_modules/ramda/es/unwind.js","node_modules/ramda/es/valuesIn.js","node_modules/ramda/es/view.js","node_modules/ramda/es/when.js","node_modules/ramda/es/where.js","node_modules/ramda/es/whereAny.js","node_modules/ramda/es/whereEq.js","node_modules/ramda/es/without.js","node_modules/ramda/es/xor.js","node_modules/ramda/es/xprod.js","node_modules/ramda/es/zip.js","node_modules/ramda/es/zipObj.js","node_modules/ramda/es/zipWith.js","node_modules/ramda/es/thunkify.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"0a8ecb283d214d75\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","//import { curry } from \"ramda\";\n//import * as R from \"node_modules/ramda\";\n//const R = require(\"ramda\");\n\nimport { curry, add, subtract } from \"ramda\";\n//import * as R from 'ramda';\n\n// console.log(add(2, 5));\n// console.log(subtract(2, 5));\n\nconst prevConsoles = document.querySelector(\".prev-consoles\");  //get the previous console addidng element\nconst consoleInput = document.querySelector(\".console-input\");  //get the comnsole input element.\n\nconst addEvent = curry(( ele, eventName, eventFunc) => {ele.addEventListner(eventName, eventFunc);})  // making addEvent common reusable using curry\n\nconst inputEnterKeyUp = addEvent(consoleInput, \"keyup\")                                             // passing element and eventName first \n\nconst enterKeyEvent = (event) => {\n    \n    if(event.key !== \"Enter\"){\n        return;\n    }\n    if(event.target.value.length === 0){\n        return;\n    }\n    const inputString = consoleInput.value.trim();\n\n    try{\n        addConsole(inputString,eval(inputString));\n    }catch(error){\n        addConsole(inputString, error);\n    }\n    consoleInput.value = \"\";\n}\ninputEnterKeyUp(enterKeyEvent);                                                                     //passing eventFunction\n\n\nconst createElement = (ele) => document.createElement(ele);\n\nconst addClass = curry((ele, cls) => ele.classList.add(cls));               // adding class to element using Ramda\nconst addText = curry((ele, text) => (ele.textContent = text));             // adding text value to element using Ramda\n\n\nfunction addConsole(inputString, output){\n    const outputString = output.toString();\n\n    const inputConsoleElement = createElement(\"div\");\n    const outputConsoleElement = createElement(\"div\");\n\n    addClass(inputConsoleElement, \"console-input-log\");\n    addText(inputConsoleElement, `> ${inputString}`);\n\n    addClass(outputConsoleElement, \"console-output-log\");\n    addText(outputConsoleElement `> ${outputString}`);\n\n    prevConsoles.append(inputLogElement, outputLogElement);\n}\n\n\n\n\n\n\n/* --- Basic Logic --- */\n// const prevConsoles = document.querySelector(\".prev-consoles\");    //get the prevConsoles element to store prev consoles.\n// const consoleInput = document.querySelector(\".console-input\");  //get the input element\n\n\n\n// consoleInput.addEventListener(\"keyup\", (event) => {\n\n//     if(event.key !== \"Enter\"){\n//         return;\n//     }\n//     if(event.target.value.length === 0){\n//         return;\n//     }\n\n//     const input = event.target.value;\n\n//     try{\n//         addConsole(input, eval(input));\n//     }catch(error){\n//         addConsole(input, error);\n//     }\n//     consoleInput.value = \"\";\n// })\n\n\n// function addConsole(inputString, output){\n//     const outputString =  output.toString();\n\n//     const inputConsoleElement = document.createElement(\"div\");\n//     const outputConsoleElement = document.createElement(\"div\");\n\n//     inputConsoleElement.classList.add(\"console-input-log\");\n//     outputConsoleElement.classList.add(\"console-output-log\");\n\n//     inputConsoleElement.textContent =  `> ${inputString}`;\n//     outputConsoleElement.textContent =  `> ${outputString}`;\n\n//     prevConsoles.append(inputConsoleElement, outputConsoleElement);\n// }","export { default as F } from \"./F.js\";\nexport { default as T } from \"./T.js\";\nexport { default as __ } from \"./__.js\";\nexport { default as add } from \"./add.js\";\nexport { default as addIndex } from \"./addIndex.js\";\nexport { default as adjust } from \"./adjust.js\";\nexport { default as all } from \"./all.js\";\nexport { default as allPass } from \"./allPass.js\";\nexport { default as always } from \"./always.js\";\nexport { default as and } from \"./and.js\";\nexport { default as any } from \"./any.js\";\nexport { default as anyPass } from \"./anyPass.js\";\nexport { default as ap } from \"./ap.js\";\nexport { default as aperture } from \"./aperture.js\";\nexport { default as append } from \"./append.js\";\nexport { default as apply } from \"./apply.js\";\nexport { default as applySpec } from \"./applySpec.js\";\nexport { default as applyTo } from \"./applyTo.js\";\nexport { default as ascend } from \"./ascend.js\";\nexport { default as assoc } from \"./assoc.js\";\nexport { default as assocPath } from \"./assocPath.js\";\nexport { default as binary } from \"./binary.js\";\nexport { default as bind } from \"./bind.js\";\nexport { default as both } from \"./both.js\";\nexport { default as call } from \"./call.js\";\nexport { default as chain } from \"./chain.js\";\nexport { default as clamp } from \"./clamp.js\";\nexport { default as clone } from \"./clone.js\";\nexport { default as collectBy } from \"./collectBy.js\";\nexport { default as comparator } from \"./comparator.js\";\nexport { default as complement } from \"./complement.js\";\nexport { default as compose } from \"./compose.js\";\nexport { default as composeWith } from \"./composeWith.js\";\nexport { default as concat } from \"./concat.js\";\nexport { default as cond } from \"./cond.js\";\nexport { default as construct } from \"./construct.js\";\nexport { default as constructN } from \"./constructN.js\";\nexport { default as converge } from \"./converge.js\";\nexport { default as count } from \"./count.js\";\nexport { default as countBy } from \"./countBy.js\";\nexport { default as curry } from \"./curry.js\";\nexport { default as curryN } from \"./curryN.js\";\nexport { default as dec } from \"./dec.js\";\nexport { default as defaultTo } from \"./defaultTo.js\";\nexport { default as descend } from \"./descend.js\";\nexport { default as difference } from \"./difference.js\";\nexport { default as differenceWith } from \"./differenceWith.js\";\nexport { default as dissoc } from \"./dissoc.js\";\nexport { default as dissocPath } from \"./dissocPath.js\";\nexport { default as divide } from \"./divide.js\";\nexport { default as drop } from \"./drop.js\";\nexport { default as dropLast } from \"./dropLast.js\";\nexport { default as dropLastWhile } from \"./dropLastWhile.js\";\nexport { default as dropRepeats } from \"./dropRepeats.js\";\nexport { default as dropRepeatsWith } from \"./dropRepeatsWith.js\";\nexport { default as dropWhile } from \"./dropWhile.js\";\nexport { default as either } from \"./either.js\";\nexport { default as empty } from \"./empty.js\";\nexport { default as endsWith } from \"./endsWith.js\";\nexport { default as eqBy } from \"./eqBy.js\";\nexport { default as eqProps } from \"./eqProps.js\";\nexport { default as equals } from \"./equals.js\";\nexport { default as evolve } from \"./evolve.js\";\nexport { default as filter } from \"./filter.js\";\nexport { default as find } from \"./find.js\";\nexport { default as findIndex } from \"./findIndex.js\";\nexport { default as findLast } from \"./findLast.js\";\nexport { default as findLastIndex } from \"./findLastIndex.js\";\nexport { default as flatten } from \"./flatten.js\";\nexport { default as flip } from \"./flip.js\";\nexport { default as forEach } from \"./forEach.js\";\nexport { default as forEachObjIndexed } from \"./forEachObjIndexed.js\";\nexport { default as fromPairs } from \"./fromPairs.js\";\nexport { default as groupBy } from \"./groupBy.js\";\nexport { default as groupWith } from \"./groupWith.js\";\nexport { default as gt } from \"./gt.js\";\nexport { default as gte } from \"./gte.js\";\nexport { default as has } from \"./has.js\";\nexport { default as hasIn } from \"./hasIn.js\";\nexport { default as hasPath } from \"./hasPath.js\";\nexport { default as head } from \"./head.js\";\nexport { default as identical } from \"./identical.js\";\nexport { default as identity } from \"./identity.js\";\nexport { default as ifElse } from \"./ifElse.js\";\nexport { default as inc } from \"./inc.js\";\nexport { default as includes } from \"./includes.js\";\nexport { default as indexBy } from \"./indexBy.js\";\nexport { default as indexOf } from \"./indexOf.js\";\nexport { default as init } from \"./init.js\";\nexport { default as innerJoin } from \"./innerJoin.js\";\nexport { default as insert } from \"./insert.js\";\nexport { default as insertAll } from \"./insertAll.js\";\nexport { default as intersection } from \"./intersection.js\";\nexport { default as intersperse } from \"./intersperse.js\";\nexport { default as into } from \"./into.js\";\nexport { default as invert } from \"./invert.js\";\nexport { default as invertObj } from \"./invertObj.js\";\nexport { default as invoker } from \"./invoker.js\";\nexport { default as is } from \"./is.js\";\nexport { default as isEmpty } from \"./isEmpty.js\";\nexport { default as isNil } from \"./isNil.js\";\nexport { default as join } from \"./join.js\";\nexport { default as juxt } from \"./juxt.js\";\nexport { default as keys } from \"./keys.js\";\nexport { default as keysIn } from \"./keysIn.js\";\nexport { default as last } from \"./last.js\";\nexport { default as lastIndexOf } from \"./lastIndexOf.js\";\nexport { default as length } from \"./length.js\";\nexport { default as lens } from \"./lens.js\";\nexport { default as lensIndex } from \"./lensIndex.js\";\nexport { default as lensPath } from \"./lensPath.js\";\nexport { default as lensProp } from \"./lensProp.js\";\nexport { default as lift } from \"./lift.js\";\nexport { default as liftN } from \"./liftN.js\";\nexport { default as lt } from \"./lt.js\";\nexport { default as lte } from \"./lte.js\";\nexport { default as map } from \"./map.js\";\nexport { default as mapAccum } from \"./mapAccum.js\";\nexport { default as mapAccumRight } from \"./mapAccumRight.js\";\nexport { default as mapObjIndexed } from \"./mapObjIndexed.js\";\nexport { default as match } from \"./match.js\";\nexport { default as mathMod } from \"./mathMod.js\";\nexport { default as max } from \"./max.js\";\nexport { default as maxBy } from \"./maxBy.js\";\nexport { default as mean } from \"./mean.js\";\nexport { default as median } from \"./median.js\";\nexport { default as memoizeWith } from \"./memoizeWith.js\";\nexport { default as mergeAll } from \"./mergeAll.js\";\nexport { default as mergeDeepLeft } from \"./mergeDeepLeft.js\";\nexport { default as mergeDeepRight } from \"./mergeDeepRight.js\";\nexport { default as mergeDeepWith } from \"./mergeDeepWith.js\";\nexport { default as mergeDeepWithKey } from \"./mergeDeepWithKey.js\";\nexport { default as mergeLeft } from \"./mergeLeft.js\";\nexport { default as mergeRight } from \"./mergeRight.js\";\nexport { default as mergeWith } from \"./mergeWith.js\";\nexport { default as mergeWithKey } from \"./mergeWithKey.js\";\nexport { default as min } from \"./min.js\";\nexport { default as minBy } from \"./minBy.js\";\nexport { default as modify } from \"./modify.js\";\nexport { default as modifyPath } from \"./modifyPath.js\";\nexport { default as modulo } from \"./modulo.js\";\nexport { default as move } from \"./move.js\";\nexport { default as multiply } from \"./multiply.js\";\nexport { default as nAry } from \"./nAry.js\";\nexport { default as partialObject } from \"./partialObject.js\";\nexport { default as negate } from \"./negate.js\";\nexport { default as none } from \"./none.js\";\nexport { default as not } from \"./not.js\";\nexport { default as nth } from \"./nth.js\";\nexport { default as nthArg } from \"./nthArg.js\";\nexport { default as o } from \"./o.js\";\nexport { default as objOf } from \"./objOf.js\";\nexport { default as of } from \"./of.js\";\nexport { default as omit } from \"./omit.js\";\nexport { default as on } from \"./on.js\";\nexport { default as once } from \"./once.js\";\nexport { default as or } from \"./or.js\";\nexport { default as otherwise } from \"./otherwise.js\";\nexport { default as over } from \"./over.js\";\nexport { default as pair } from \"./pair.js\";\nexport { default as partial } from \"./partial.js\";\nexport { default as partialRight } from \"./partialRight.js\";\nexport { default as partition } from \"./partition.js\";\nexport { default as path } from \"./path.js\";\nexport { default as paths } from \"./paths.js\";\nexport { default as pathEq } from \"./pathEq.js\";\nexport { default as pathOr } from \"./pathOr.js\";\nexport { default as pathSatisfies } from \"./pathSatisfies.js\";\nexport { default as pick } from \"./pick.js\";\nexport { default as pickAll } from \"./pickAll.js\";\nexport { default as pickBy } from \"./pickBy.js\";\nexport { default as pipe } from \"./pipe.js\";\nexport { default as pipeWith } from \"./pipeWith.js\";\nexport { default as pluck } from \"./pluck.js\";\nexport { default as prepend } from \"./prepend.js\";\nexport { default as product } from \"./product.js\";\nexport { default as project } from \"./project.js\";\nexport { default as promap } from \"./promap.js\";\nexport { default as prop } from \"./prop.js\";\nexport { default as propEq } from \"./propEq.js\";\nexport { default as propIs } from \"./propIs.js\";\nexport { default as propOr } from \"./propOr.js\";\nexport { default as propSatisfies } from \"./propSatisfies.js\";\nexport { default as props } from \"./props.js\";\nexport { default as range } from \"./range.js\";\nexport { default as reduce } from \"./reduce.js\";\nexport { default as reduceBy } from \"./reduceBy.js\";\nexport { default as reduceRight } from \"./reduceRight.js\";\nexport { default as reduceWhile } from \"./reduceWhile.js\";\nexport { default as reduced } from \"./reduced.js\";\nexport { default as reject } from \"./reject.js\";\nexport { default as remove } from \"./remove.js\";\nexport { default as repeat } from \"./repeat.js\";\nexport { default as replace } from \"./replace.js\";\nexport { default as reverse } from \"./reverse.js\";\nexport { default as scan } from \"./scan.js\";\nexport { default as sequence } from \"./sequence.js\";\nexport { default as set } from \"./set.js\";\nexport { default as slice } from \"./slice.js\";\nexport { default as sort } from \"./sort.js\";\nexport { default as sortBy } from \"./sortBy.js\";\nexport { default as sortWith } from \"./sortWith.js\";\nexport { default as split } from \"./split.js\";\nexport { default as splitAt } from \"./splitAt.js\";\nexport { default as splitEvery } from \"./splitEvery.js\";\nexport { default as splitWhen } from \"./splitWhen.js\";\nexport { default as splitWhenever } from \"./splitWhenever.js\";\nexport { default as startsWith } from \"./startsWith.js\";\nexport { default as subtract } from \"./subtract.js\";\nexport { default as sum } from \"./sum.js\";\nexport { default as symmetricDifference } from \"./symmetricDifference.js\";\nexport { default as symmetricDifferenceWith } from \"./symmetricDifferenceWith.js\";\nexport { default as tail } from \"./tail.js\";\nexport { default as take } from \"./take.js\";\nexport { default as takeLast } from \"./takeLast.js\";\nexport { default as takeLastWhile } from \"./takeLastWhile.js\";\nexport { default as takeWhile } from \"./takeWhile.js\";\nexport { default as tap } from \"./tap.js\";\nexport { default as test } from \"./test.js\";\nexport { default as andThen } from \"./andThen.js\";\nexport { default as times } from \"./times.js\";\nexport { default as toLower } from \"./toLower.js\";\nexport { default as toPairs } from \"./toPairs.js\";\nexport { default as toPairsIn } from \"./toPairsIn.js\";\nexport { default as toString } from \"./toString.js\";\nexport { default as toUpper } from \"./toUpper.js\";\nexport { default as transduce } from \"./transduce.js\";\nexport { default as transpose } from \"./transpose.js\";\nexport { default as traverse } from \"./traverse.js\";\nexport { default as trim } from \"./trim.js\";\nexport { default as tryCatch } from \"./tryCatch.js\";\nexport { default as type } from \"./type.js\";\nexport { default as unapply } from \"./unapply.js\";\nexport { default as unary } from \"./unary.js\";\nexport { default as uncurryN } from \"./uncurryN.js\";\nexport { default as unfold } from \"./unfold.js\";\nexport { default as union } from \"./union.js\";\nexport { default as unionWith } from \"./unionWith.js\";\nexport { default as uniq } from \"./uniq.js\";\nexport { default as uniqBy } from \"./uniqBy.js\";\nexport { default as uniqWith } from \"./uniqWith.js\";\nexport { default as unless } from \"./unless.js\";\nexport { default as unnest } from \"./unnest.js\";\nexport { default as until } from \"./until.js\";\nexport { default as unwind } from \"./unwind.js\";\nexport { default as update } from \"./update.js\";\nexport { default as useWith } from \"./useWith.js\";\nexport { default as values } from \"./values.js\";\nexport { default as valuesIn } from \"./valuesIn.js\";\nexport { default as view } from \"./view.js\";\nexport { default as when } from \"./when.js\";\nexport { default as where } from \"./where.js\";\nexport { default as whereAny } from \"./whereAny.js\";\nexport { default as whereEq } from \"./whereEq.js\";\nexport { default as without } from \"./without.js\";\nexport { default as xor } from \"./xor.js\";\nexport { default as xprod } from \"./xprod.js\";\nexport { default as zip } from \"./zip.js\";\nexport { default as zipObj } from \"./zipObj.js\";\nexport { default as zipWith } from \"./zipWith.js\";\nexport { default as thunkify } from \"./thunkify.js\";","/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\n\nexport default F;","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\n\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default {\n  '@@functional/placeholder': true\n};","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\nvar add =\n/*#__PURE__*/\n_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\nexport default add;","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _concat from \"./internal/_concat.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig (((a ...) -> b) ... -> [a] -> *) -> (((a ..., Int, [a]) -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\nvar addIndex =\n/*#__PURE__*/\n_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});\n\nexport default addIndex;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\n\nvar adjust =\n/*#__PURE__*/\n_curry3(function adjust(idx, fn, list) {\n  var len = list.length;\n\n  if (idx >= len || idx < -len) {\n    return list;\n  }\n\n  var _idx = (len + idx) % len;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nexport default adjust;","import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xall from \"./internal/_xall.js\";\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;","import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[arguments.length - 1];\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAll =\n/*#__PURE__*/\nfunction () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall =\n/*#__PURE__*/\n_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\n\nexport default _xall;","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '♠︎');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\n\nvar allPass =\n/*#__PURE__*/\n_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n\n      idx += 1;\n    }\n\n    return true;\n  });\n});\n\nexport default allPass;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nexport default max;","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.project, R.prop, R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex, R.pluck, R.project\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n *      _isArrayLike({nodeType: 1, length: 1}) // => false\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.props, R.pluck, R.project, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  if (obj == null) {\n    return;\n  }\n\n  return _isInteger(p) ? nth(p, obj) : obj[p];\n});\n\nexport default prop;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import _curry3 from \"./internal/_curry3.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the first argument if it is falsy, otherwise the second argument.\n * Acts as the boolean `and` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.both, R.or\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\n\nvar and =\n/*#__PURE__*/\n_curry2(function and(a, b) {\n  return a && b;\n});\n\nexport default and;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xany from \"./internal/_xany.js\";\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAny =\n/*#__PURE__*/\nfunction () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany =\n/*#__PURE__*/\n_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\n\nexport default _xany;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '♣');\n *      const isSpade = R.propEq('suit', '♠');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\n\nvar anyPass =\n/*#__PURE__*/\n_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  });\n});\n\nexport default anyPass;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport map from \"./map.js\";\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\nvar ap =\n/*#__PURE__*/\n_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\n\nexport default ap;","import _aperture from \"./internal/_aperture.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xaperture from \"./internal/_xaperture.js\";\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\n\nvar aperture =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xaperture, _aperture));\n\nexport default aperture;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n\n  return acc;\n}","import _concat from \"./_concat.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAperture =\n/*#__PURE__*/\nfunction () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture =\n/*#__PURE__*/\n_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\n\nexport default _xaperture;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nexport default append;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\nvar apply =\n/*#__PURE__*/\n_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nexport default apply;","import _curry1 from \"./internal/_curry1.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport apply from \"./apply.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\nimport keys from \"./keys.js\";\nimport values from \"./values.js\"; // Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\n\nfunction mapValues(fn, obj) {\n  return _isArray(obj) ? obj.map(fn) : keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\n\nvar applySpec =\n/*#__PURE__*/\n_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\n\nexport default applySpec;","import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys, R.toPairs\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\n\nvar applyTo =\n/*#__PURE__*/\n_curry2(function applyTo(x, f) {\n  return f(x);\n});\n\nexport default applyTo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar ascend =\n/*#__PURE__*/\n_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\nexport default ascend;","import _curry3 from \"./internal/_curry3.js\";\nimport assocPath from \"./assocPath.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> a -> {k: v} -> {k: v}\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  return assocPath([prop], val, obj);\n});\n\nexport default assoc;","import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _assoc from \"./internal/_assoc.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  return _assoc(idx, val, obj);\n});\n\nexport default assocPath;","import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\n\nexport default function _assoc(prop, val, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = val;\n    return arr;\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n}","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;","import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> ((a, b) -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\n\nvar binary =\n/*#__PURE__*/\n_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\nexport default binary;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\n\nvar nAry =\n/*#__PURE__*/\n_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\nexport default nAry;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport and from \"./and.js\";\nimport lift from \"./lift.js\";\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.either, R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\n\nvar both =\n/*#__PURE__*/\n_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\n\nexport default both;","export default function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}","import _curry1 from \"./internal/_curry1.js\";\nimport liftN from \"./liftN.js\";\n/**\n * \"lifts\" a function of arity >= 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([100, 200], [30, 40], [5, 6, 7]); //=> [135, 136, 137, 145, 146, 147, 235, 236, 237, 245, 246, 247]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([10, 20], [1], [2, 3], [4], [100, 200]); //=> [117, 217, 118, 218, 127, 227, 128, 228]\n */\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;","import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport ap from \"./ap.js\";\nimport curryN from \"./curryN.js\";\nimport map from \"./map.js\";\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nexport default liftN;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig ((*... -> a), *...) -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(\n *        R.repeat(' '),\n *        R.join(''),\n *        R.replace(/^(?!$)/gm)\n *      );\n *\n *      const format = R.converge(\n *        R.call,\n *        [\n *          R.pipe(R.prop('indent'), indentN),\n *          R.prop('value')\n *        ]\n *      );\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\nvar call =\n/*#__PURE__*/\n_curry1(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\n\nexport default call;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\nimport _xchain from \"./internal/_xchain.js\";\nimport map from \"./map.js\";\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\nvar chain =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));\n\nexport default chain;","import _isArrayLike from \"./_isArrayLike.js\";\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}","import _curry2 from \"./_curry2.js\";\nimport _flatCat from \"./_flatCat.js\";\nimport map from \"../map.js\";\n\nvar _xchain =\n/*#__PURE__*/\n_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\nexport default _xchain;","import _forceReduced from \"./_forceReduced.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _reduce from \"./_reduce.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\n\nvar clamp =\n/*#__PURE__*/\n_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});\n\nexport default clamp;","import _clone from \"./internal/_clone.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a deep copy of the source that can be used in place of the source\n * object without retaining any references to it.\n * The source object may contain (nested) `Array`s and `Object`s,\n * `Number`s, `String`s, `Boolean`s and `Date`s.\n * `Function`s are assigned by reference rather than copied.\n *\n * Dispatches to a `clone` method if present.\n *\n * Note that if the source object has multiple nodes that share a reference,\n * the returned object will have the same structure, but the references will\n * be pointed to the location within the cloned value.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\n\nexport default clone;","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx] = value;\n    refTo[idx] = copiedValue;\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n      }\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n\n    default:\n      return value;\n  }\n}","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Splits a list into sub-lists, based on the result of calling a key-returning function on each element,\n * and grouping the results according to values returned.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> [[b]]\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Array}\n *    An array of arrays where each sub-array contains items for which\n *    the String-returning function has returned the same value.\n * @see R.groupBy, R.partition\n * @example\n *      R.collectBy(R.prop('type'), [\n *        {type: 'breakfast', item: '☕️'},\n *        {type: 'lunch', item: '🌯'},\n *        {type: 'dinner', item: '🍝'},\n *        {type: 'breakfast', item: '🥐'},\n *        {type: 'lunch', item: '🍕'}\n *      ]);\n *\n *      // [ [ {type: 'breakfast', item: '☕️'},\n *      //     {type: 'breakfast', item: '🥐'} ],\n *      //   [ {type: 'lunch', item: '🌯'},\n *      //     {type: 'lunch', item: '🍕'} ],\n *      //   [ {type: 'dinner', item: '🍝'} ] ]\n */\n\nvar collectBy =\n/*#__PURE__*/\n_curry2(function collectBy(fn, list) {\n  var group = _reduce(function (o, x) {\n    var tag = fn(x);\n\n    if (o[tag] === undefined) {\n      o[tag] = [];\n    }\n\n    o[tag].push(x);\n    return o;\n  }, {}, list);\n\n  var newList = [];\n\n  for (var tag in group) {\n    newList.push(group[tag]);\n  }\n\n  return newList;\n});\n\nexport default collectBy;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar comparator =\n/*#__PURE__*/\n_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\nexport default comparator;","import lift from \"./lift.js\";\nimport not from \"./not.js\";\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      R.isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      R.isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\nvar complement =\n/*#__PURE__*/\nlift(not);\nexport default complement;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;","import pipe from \"./pipe.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n * @symb R.compose(f, g, h)(a)(b) = f(g(h(a)))(b)\n */\n\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}","import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _curry1 from \"./internal/_curry1.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nexport default reverse;","import _curry2 from \"./internal/_curry2.js\";\nimport pipeWith from \"./pipeWith.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition using transforming function. The last function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of composeWith is not automatically curried. Transforming function is not used\n * on the last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\n\nvar composeWith =\n/*#__PURE__*/\n_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\n\nexport default composeWith;","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport head from \"./head.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport tail from \"./tail.js\";\nimport identity from \"./identity.js\";\n/**\n * Performs left-to-right function composition using transforming function. The first function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried. Transforming function is not used on the\n * first argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to pipe\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, g(...args)))\n */\n\nvar pipeWith =\n/*#__PURE__*/\n_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\n\nexport default pipeWith;","import nth from \"./nth.js\";\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\nvar head =\n/*#__PURE__*/\nnth(0);\nexport default head;","import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;","export default function _identity(x) {\n  return x;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport _isString from \"./internal/_isString.js\";\nimport toString from \"./toString.js\";\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nexport default concat;","import _curry1 from \"./internal/_curry1.js\";\nimport _toString from \"./internal/_toString.js\";\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;","import _includes from \"./_includes.js\";\nimport _map from \"./_map.js\";\nimport _quote from \"./_quote.js\";\nimport _toISOString from \"./_toISOString.js\";\nimport keys from \"../keys.js\";\nimport reject from \"../reject.js\";\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparison of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport filter from \"./filter.js\";\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 !== 0;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xfilter from \"./internal/_xfilter.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/filter', 'filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nexport default _xfilter;","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport map from \"./map.js\";\nimport max from \"./max.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * **Please note**: This is not a direct substitute for a `switch` statement.\n * Remember that both elements of every pair passed to `cond` are *functions*,\n * and `cond` returns a function.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nexport default cond;","import _curry1 from \"./internal/_curry1.js\";\nimport constructN from \"./constructN.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\nvar construct =\n/*#__PURE__*/\n_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\nexport default construct;","import _curry2 from \"./internal/_curry2.js\";\nimport curry from \"./curry.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\n\nvar constructN =\n/*#__PURE__*/\n_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n\n      case 2:\n        return new Fn($0, $1);\n\n      case 3:\n        return new Fn($0, $1, $2);\n\n      case 4:\n        return new Fn($0, $1, $2, $3);\n\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\nexport default constructN;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;","import _curry2 from \"./internal/_curry2.js\";\nimport _map from \"./internal/_map.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nexport default converge;","import _reduce from \"./internal/_reduce.js\";\nimport curry from \"./curry.js\";\n/**\n * Returns the number of items in a given `list` matching the predicate `f`\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} predicate to match items against\n * @return {Array} list of items to count in\n * @example\n *\n *      const even = x => x % 2 == 0;\n *\n *      R.count(even, [1, 2, 3, 4, 5]); // => 2\n *      R.map(R.count(even), [[1, 1, 1], [2, 3, 4, 5], [6]]); // => [0, 2, 1]\n */\n\nvar count =\n/*#__PURE__*/\ncurry(function (pred, list) {\n  return _reduce(function (a, e) {\n    return pred(e) ? a + 1 : a;\n  }, 0, list);\n});\nexport default count;","import reduceBy from \"./reduceBy.js\";\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\nvar countBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _reduced from \"./internal/_reduced.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * The value function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to short circuit the iteration.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce, R.reduced\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    var value = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n\n    if (value && value['@@transducer/reduced']) {\n      return _reduced(acc);\n    }\n\n    acc[key] = value;\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;","import _curryN from \"./_curryN.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;","import add from \"./add.js\";\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\n\nvar dec =\n/*#__PURE__*/\nadd(-1);\nexport default dec;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nexport default defaultTo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\n\nvar descend =\n/*#__PURE__*/\n_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\nexport default descend;","import _curry2 from \"./internal/_curry2.js\";\nimport _Set from \"./internal/_Set.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default difference;","import _includes from \"./_includes.js\";\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;","import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\n\nvar differenceWith =\n/*#__PURE__*/\n_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default differenceWith;","import _curry2 from \"./internal/_curry2.js\";\nimport dissocPath from \"./dissocPath.js\";\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\n\nvar dissoc =\n/*#__PURE__*/\n_curry2(function dissoc(prop, obj) {\n  return dissocPath([prop], obj);\n});\n\nexport default dissoc;","import _curry2 from \"./internal/_curry2.js\";\nimport _dissoc from \"./internal/_dissoc.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\n/**\n * Makes a shallow clone of an object. Note that this copies and flattens\n * prototype properties onto the new object as well. All non-primitive\n * properties are copied by reference.\n *\n * @private\n * @param {String|Integer} prop The prop operating\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original.\n */\n\nfunction _shallowCloneObject(prop, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    return [].concat(obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  return result;\n}\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\n\nvar dissocPath =\n/*#__PURE__*/\n_curry2(function dissocPath(path, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return _shallowCloneObject(head, obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;","import _isInteger from \"./_isInteger.js\";\nimport _isArray from \"./_isArray.js\";\nimport remove from \"../remove.js\";\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @private\n * @param {String|Number} prop The name of the property to dissociate\n * @param {Object|Array} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n */\n\nexport default function _dissoc(prop, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  if (_isInteger(prop) && _isArray(obj)) {\n    return remove(prop, 1, obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  delete result[prop];\n  return result;\n}","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nexport default remove;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\nvar divide =\n/*#__PURE__*/\n_curry2(function divide(a, b) {\n  return a / b;\n});\n\nexport default divide;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdrop from \"./internal/_xdrop.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nexport default _xdrop;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLast from \"./internal/_dropLast.js\";\nimport _xdropLast from \"./internal/_xdropLast.js\";\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nexport default dropLast;","import take from \"../take.js\";\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtake from \"./internal/_xtake.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nexport default take;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nexport default _xtake;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nexport default _xdropLast;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLastWhile from \"./internal/_dropLastWhile.js\";\nimport _xdropLastWhile from \"./internal/_xdropLastWhile.js\";\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\n\nvar dropLastWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\nexport default dropLastWhile;","import slice from \"../slice.js\";\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(0, idx + 1, xs);\n}","import _curry2 from \"./_curry2.js\";\nimport _reduce from \"./_reduce.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropLastWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile =\n/*#__PURE__*/\n_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\n\nexport default _xdropLastWhile;","import _curry1 from \"./internal/_curry1.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport dropRepeatsWith from \"./dropRepeatsWith.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\nvar dropRepeats =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_dispatchable([],\n/*#__PURE__*/\n_xdropRepeatsWith(equals),\n/*#__PURE__*/\ndropRepeatsWith(equals)));\n\nexport default dropRepeats;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropRepeatsWith =\n/*#__PURE__*/\nfunction () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith =\n/*#__PURE__*/\n_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\n\nexport default _xdropRepeatsWith;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport last from \"./last.js\";\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\n\nvar dropRepeatsWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n\n  if (len !== 0) {\n    result[0] = list[0];\n\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n  }\n\n  return result;\n}));\n\nexport default dropRepeatsWith;","import nth from \"./nth.js\";\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nexport default last;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropWhile from \"./internal/_xdropWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\n\nvar dropWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(idx, Infinity, xs);\n}));\n\nexport default dropWhile;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDropWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile =\n/*#__PURE__*/\n_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\n\nexport default _xdropWhile;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport lift from \"./lift.js\";\nimport or from \"./or.js\";\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.both, R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\n\nvar either =\n/*#__PURE__*/\n_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\n\nexport default either;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the first argument if it is truthy, otherwise the second argument.\n * Acts as the boolean `or` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.either, R.and\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\nvar or =\n/*#__PURE__*/\n_curry2(function or(a, b) {\n  return a || b;\n});\n\nexport default or;","import _curry1 from \"./internal/_curry1.js\";\nimport _isArguments from \"./internal/_isArguments.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _isString from \"./internal/_isString.js\";\nimport _isTypedArray from \"./internal/_isTypedArray.js\";\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`),\n * TypedArray (`Uint8Array []`, `Float32Array []`, etc), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));               //=> Nothing()\n *      R.empty([1, 2, 3]);              //=> []\n *      R.empty('unicorns');             //=> ''\n *      R.empty({x: 1, y: 2});           //=> {}\n *      R.empty(Uint8Array.from('123')); //=> Uint8Array []\n */\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : _isTypedArray(x) ? x.constructor.from('') : void 0 // else\n  ;\n});\n\nexport default empty;","/**\n * Tests whether or not an object is a typed array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is a typed array, `false` otherwise.\n * @example\n *\n *      _isTypedArray(new Uint8Array([])); //=> true\n *      _isTypedArray(new Float32Array([])); //=> true\n *      _isTypedArray([]); //=> false\n *      _isTypedArray(null); //=> false\n *      _isTypedArray({}); //=> false\n */\nexport default function _isTypedArray(val) {\n  var type = Object.prototype.toString.call(val);\n  return type === '[object Uint8ClampedArray]' || type === '[object Int8Array]' || type === '[object Uint8Array]' || type === '[object Int16Array]' || type === '[object Uint16Array]' || type === '[object Int32Array]' || type === '[object Uint32Array]' || type === '[object Float32Array]' || type === '[object Float64Array]' || type === '[object BigInt64Array]' || type === '[object BigUint64Array]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport takeLast from \"./takeLast.js\";\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar endsWith =\n/*#__PURE__*/\n_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n\nexport default endsWith;","import _curry2 from \"./internal/_curry2.js\";\nimport drop from \"./drop.js\";\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\nvar takeLast =\n/*#__PURE__*/\n_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\nexport default takeLast;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\nvar eqBy =\n/*#__PURE__*/\n_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\nexport default eqBy;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nexport default eqProps;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\nvar evolve =\n/*#__PURE__*/\n_curry2(function evolve(transformations, object) {\n  if (!_isObject(object) && !_isArray(object)) {\n    return object;\n  }\n\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});\n\nexport default evolve;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfind from \"./internal/_xfind.js\";\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nexport default _xfind;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindIndex from \"./internal/_xfindIndex.js\";\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.indexOf\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));\n\nexport default findIndex;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex =\n/*#__PURE__*/\n_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\n\nexport default _xfindIndex;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLast from \"./internal/_xfindLast.js\";\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar findLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx -= 1;\n  }\n}));\n\nexport default findLast;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindLast =\n/*#__PURE__*/\nfunction () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast =\n/*#__PURE__*/\n_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\n\nexport default _xfindLast;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLastIndex from \"./internal/_xfindLastIndex.js\";\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.lastIndexOf\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findLastIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));\n\nexport default findLastIndex;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindLastIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex =\n/*#__PURE__*/\n_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\n\nexport default _xfindLastIndex;","import _curry1 from \"./internal/_curry1.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nexport default flatten;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nexport default flip;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\nvar forEach =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));\n\nexport default forEach;","import _curry2 from \"./internal/_curry2.js\";\nimport keys from \"./keys.js\";\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\n\nvar forEachObjIndexed =\n/*#__PURE__*/\n_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});\n\nexport default forEachObjIndexed;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default fromPairs;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a key-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: [b]}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce, R.indexBy\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  acc.push(item);\n  return acc;\n}, [])));\n\nexport default groupBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * const isVowel = R.test(/^[aeiou]$/i);\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\nvar groupWith =\n/*#__PURE__*/\n_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});\n\nexport default groupWith;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\n\nvar gt =\n/*#__PURE__*/\n_curry2(function gt(a, b) {\n  return a > b;\n});\n\nexport default gt;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\n\nvar gte =\n/*#__PURE__*/\n_curry2(function gte(a, b) {\n  return a >= b;\n});\n\nexport default gte;","import _curry2 from \"./internal/_curry2.js\";\nimport hasPath from \"./hasPath.js\";\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nexport default has;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default hasPath;","import _curry2 from \"./internal/_curry2.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\n\nvar hasIn =\n/*#__PURE__*/\n_curry2(function hasIn(prop, obj) {\n  if (isNil(obj)) {\n    return false;\n  }\n\n  return prop in obj;\n});\n\nexport default hasIn;","import _objectIs from \"./internal/_objectIs.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\nvar identical =\n/*#__PURE__*/\n_curry2(_objectIs);\n\nexport default identical;","import _curry3 from \"./internal/_curry3.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({ count: 1 }); //=> { count: 2 }\n *      incCount({});           //=> { count: 1 }\n */\n\nvar ifElse =\n/*#__PURE__*/\n_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\n\nexport default ifElse;","import add from \"./add.js\";\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\n\nvar inc =\n/*#__PURE__*/\nadd(1);\nexport default inc;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Also works with strings.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\n\nvar includes =\n/*#__PURE__*/\n_curry2(_includes);\n\nexport default includes;","import reduceBy from \"./reduceBy.js\";\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: b}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @see R.groupBy\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from \"./internal/_curry2.js\";\nimport _indexOf from \"./internal/_indexOf.js\";\nimport _isArray from \"./internal/_isArray.js\";\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf, R.findIndex\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar indexOf =\n/*#__PURE__*/\n_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\n\nexport default indexOf;","import slice from \"./slice.js\";\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\n\nvar init =\n/*#__PURE__*/\nslice(0, -1);\nexport default init;","import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _filter from \"./internal/_filter.js\";\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\nvar innerJoin =\n/*#__PURE__*/\n_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\n\nexport default innerJoin;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\n\nvar insert =\n/*#__PURE__*/\n_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\nexport default insert;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\n\nvar insertAll =\n/*#__PURE__*/\n_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\n\nexport default insertAll;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _filter from \"./internal/_filter.js\";\nimport flip from \"./flip.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\nvar intersection =\n/*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\n\nexport default intersection;","import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;","import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xuniqBy from \"./internal/_xuniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqBy, function (fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqBy;","import _curry2 from \"./_curry2.js\";\nimport _Set from \"./_Set.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XUniqBy =\n/*#__PURE__*/\nfunction () {\n  function XUniqBy(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.set = new _Set();\n  }\n\n  XUniqBy.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqBy.prototype['@@transducer/result'] = _xfBase.result;\n\n  XUniqBy.prototype['@@transducer/step'] = function (result, input) {\n    return this.set.add(this.f(input)) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XUniqBy;\n}();\n\nvar _xuniqBy =\n/*#__PURE__*/\n_curry2(function _xuniqBy(f, xf) {\n  return new XUniqBy(f, xf);\n});\n\nexport default _xuniqBy;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\n\nvar intersperse =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n}));\n\nexport default intersperse;","import _clone from \"./internal/_clone.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _isTransformer from \"./internal/_isTransformer.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _stepCat from \"./internal/_stepCat.js\";\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\nvar into =\n/*#__PURE__*/\n_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\nexport default into;","import _objectAssign from \"./_objectAssign.js\";\nimport _identity from \"./_identity.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _isTransformer from \"./_isTransformer.js\";\nimport objOf from \"../objOf.js\";\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _has from \"./_has.js\"; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nexport default objOf;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport keys from \"./keys.js\";\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\nvar invert =\n/*#__PURE__*/\n_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invert;","import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\nvar invertObj =\n/*#__PURE__*/\n_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invertObj;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport curryN from \"./curryN.js\";\nimport toString from \"./toString.js\";\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      const dog = {\n *        speak: async () => 'Woof!'\n *      };\n *      const speak = R.invoker(0, 'speak');\n *      speak(dog).then(console.log) //~> 'Woof!'\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * See if an object (i.e. `val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n * If `val` was created using `Object.create`, `R.is(Object, val) === true`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\n\nvar is =\n/*#__PURE__*/\n_curry2(function is(Ctor, val) {\n  return val instanceof Ctor || val != null && (val.constructor === Ctor || Ctor.name === 'Object' && typeof val === 'object');\n});\n\nexport default is;","import _curry1 from \"./internal/_curry1.js\";\nimport empty from \"./empty.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);           //=> false\n *      R.isEmpty([]);                  //=> true\n *      R.isEmpty('');                  //=> true\n *      R.isEmpty(null);                //=> false\n *      R.isEmpty({});                  //=> true\n *      R.isEmpty({length: 0});         //=> false\n *      R.isEmpty(Uint8Array.from('')); //=> true\n */\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nexport default isEmpty;","import invoker from \"./invoker.js\";\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nexport default join;","import _curry1 from \"./internal/_curry1.js\";\nimport converge from \"./converge.js\";\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt =\n/*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nexport default juxt;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\n\nvar keysIn =\n/*#__PURE__*/\n_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n\n  return ks;\n});\n\nexport default keysIn;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf, R.findLastIndex\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar lastIndexOf =\n/*#__PURE__*/\n_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n\n      idx -= 1;\n    }\n\n    return -1;\n  }\n});\n\nexport default lastIndexOf;","import _curry1 from \"./internal/_curry1.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nexport default length;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nexport default lens;","import _curry1 from \"./internal/_curry1.js\";\nimport lens from \"./lens.js\";\nimport nth from \"./nth.js\";\nimport update from \"./update.js\";\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over, R.nth\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\n\nvar lensIndex =\n/*#__PURE__*/\n_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\nexport default lensIndex;","import _curry3 from \"./internal/_curry3.js\";\nimport adjust from \"./adjust.js\";\nimport always from \"./always.js\";\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\nvar update =\n/*#__PURE__*/\n_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\n\nexport default update;","import _curry1 from \"./internal/_curry1.js\";\nimport assocPath from \"./assocPath.js\";\nimport lens from \"./lens.js\";\nimport path from \"./path.js\";\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\n\nvar lensPath =\n/*#__PURE__*/\n_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\nexport default lensPath;","import _curry2 from \"./internal/_curry2.js\";\nimport paths from \"./paths.js\";\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nexport default path;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Object\n * @typedefn Idx = [String | Int | Symbol]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nexport default paths;","import _curry1 from \"./internal/_curry1.js\";\nimport assoc from \"./assoc.js\";\nimport lens from \"./lens.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lensProp =\n/*#__PURE__*/\n_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nexport default lensProp;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nexport default lt;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nexport default lte;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\n\nvar mapAccum =\n/*#__PURE__*/\n_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccum;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\n\nvar mapAccumRight =\n/*#__PURE__*/\n_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccumRight;","import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport keys from \"./keys.js\";\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nexport default mapObjIndexed;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\n\nvar match =\n/*#__PURE__*/\n_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\nexport default match;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\nvar mathMod =\n/*#__PURE__*/\n_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\n\nexport default mathMod;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\n\nvar maxBy =\n/*#__PURE__*/\n_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n\nexport default maxBy;","import _curry1 from \"./internal/_curry1.js\";\nimport sum from \"./sum.js\";\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\n\nvar mean =\n/*#__PURE__*/\n_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\nexport default mean;","import add from \"./add.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\nvar sum =\n/*#__PURE__*/\nreduce(add, 0);\nexport default sum;","import _curry1 from \"./internal/_curry1.js\";\nimport mean from \"./mean.js\";\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\n\nvar median =\n/*#__PURE__*/\n_curry1(function median(list) {\n  var len = list.length;\n\n  if (len === 0) {\n    return NaN;\n  }\n\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\nexport default median;","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * Care must be taken when implementing key generation to avoid key collision,\n * or if tracking references, memory leaks and mutating arguments.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(Number, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\nvar memoizeWith =\n/*#__PURE__*/\n_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});\n\nexport default memoizeWith;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates one new object with the own properties from a list of objects.\n * If a key exists in more than one object, the value from the last\n * object it exists in will be used.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nexport default mergeAll;","import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\nvar mergeDeepLeft =\n/*#__PURE__*/\n_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepLeft;","import _curry3 from \"./internal/_curry3.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWithKey;","import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nexport default mergeWithKey;","import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepRight;","import _curry3 from \"./internal/_curry3.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWith =\n/*#__PURE__*/\n_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWith;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\n\nvar mergeLeft =\n/*#__PURE__*/\n_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\n\nexport default mergeLeft;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\n\nvar mergeRight =\n/*#__PURE__*/\n_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nexport default mergeRight;","import _curry3 from \"./internal/_curry3.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\nvar mergeWith =\n/*#__PURE__*/\n_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\nexport default mergeWith;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\n\nvar min =\n/*#__PURE__*/\n_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\n\nexport default min;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\n\nvar minBy =\n/*#__PURE__*/\n_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n\nexport default minBy;","import _curry3 from \"./internal/_curry3.js\";\nimport modifyPath from \"./modifyPath.js\";\n/**\n * Creates a copy of the passed object by applying an `fn` function to the given `prop` property.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding property does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig Idx -> (v -> v) -> {k: v} -> {k: v}\n * @param {String|Number} prop The property to be modified.\n * @param {Function} fn The function to apply to the property.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', age: 20, pets: ['dog', 'cat']};\n *      R.modify('age', R.add(1), person); //=> {name: 'James', age: 21, pets: ['dog', 'cat']}\n *      R.modify('pets', R.append('turtle'), person); //=> {name: 'James', age: 20, pets: ['dog', 'cat', 'turtle']}\n */\n\nvar modify =\n/*#__PURE__*/\n_curry3(function modify(prop, fn, object) {\n  return modifyPath([prop], fn, object);\n});\n\nexport default modify;","import _curry3 from \"./internal/_curry3.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _has from \"./internal/_has.js\";\nimport _assoc from \"./internal/_assoc.js\";\nimport _modify from \"./internal/_modify.js\";\n/**\n * Creates a shallow clone of the passed object by applying an `fn` function\n * to the value at the given path.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding path does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig [Idx] -> (v -> v) -> {k: v} -> {k: v}\n * @param {Array} path The path to be modified.\n * @param {Function} fn The function to apply to the path.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', address: { zipCode: '90216' }};\n *      R.modifyPath(['address', 'zipCode'], R.reverse, person); //=> {name: 'James', address: { zipCode: '61209' }}\n *\n *      // Can handle arrays too\n *      const person = {name: 'James', addresses: [{ zipCode: '90216' }]};\n *      R.modifyPath(['addresses', 0, 'zipCode'], R.reverse, person); //=> {name: 'James', addresses: [{ zipCode: '61209' }]}\n */\n\nvar modifyPath =\n/*#__PURE__*/\n_curry3(function modifyPath(path, fn, object) {\n  if (!_isObject(object) && !_isArray(object) || path.length === 0) {\n    return object;\n  }\n\n  var idx = path[0];\n\n  if (!_has(idx, object)) {\n    return object;\n  }\n\n  if (path.length === 1) {\n    return _modify(idx, fn, object);\n  }\n\n  var val = modifyPath(Array.prototype.slice.call(path, 1), fn, object[idx]);\n\n  if (val === object[idx]) {\n    return object;\n  }\n\n  return _assoc(idx, val, object);\n});\n\nexport default modifyPath;","import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n/**\n * Makes a shallow clone of an object, applying the given fn to the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {Function} fn The function to apply to the property\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\n\nexport default function _modify(prop, fn, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = fn(arr[prop]);\n    return arr;\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = fn(result[prop]);\n  return result;\n}","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\n\nvar modulo =\n/*#__PURE__*/\n_curry2(function modulo(a, b) {\n  return a % b;\n});\n\nexport default modulo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\n\nvar move =\n/*#__PURE__*/\n_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\nvar multiply =\n/*#__PURE__*/\n_curry2(function multiply(a, b) {\n  return a * b;\n});\n\nexport default multiply;","import mergeDeepRight from \"./mergeDeepRight.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a function `f` and an object, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the object\n * provided initially merged deeply (right) with the object provided as an argument to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (({ a, b, c, ..., n }) -> x) -> { a, b, c, ...} -> ({ d, e, f, ..., n } -> x)\n * @param {Function} f\n * @param {Object} props\n * @return {Function}\n * @see R.partial, R.partialRight, R.curry, R.mergeDeepRight\n * @example\n *\n *      const multiply2 = ({ a, b }) => a * b;\n *      const double = R.partialObject(multiply2, { a: 2 });\n *      double({ b: 2 }); //=> 4\n *\n *      const greet = ({ salutation, title, firstName, lastName }) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partialObject(greet, { salutation: 'Hello' });\n *      const sayHelloToMs = R.partialObject(sayHello, { title: 'Ms.' });\n *      sayHelloToMs({ firstName: 'Jane', lastName: 'Jones' }); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialObject(f, { a, b })({ c, d }) = f({ a, b, c, d })\n */\n\nexport default\n/*#__PURE__*/\n_curry2((f, o) => props => f.call(this, mergeDeepRight(o, props)));","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\n\nvar negate =\n/*#__PURE__*/\n_curry1(function negate(n) {\n  return -n;\n});\n\nexport default negate;","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport all from \"./all.js\";\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 !== 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\nvar none =\n/*#__PURE__*/\n_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\n\nexport default none;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\n\nvar nthArg =\n/*#__PURE__*/\n_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\n\nexport default nthArg;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator ∘.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\n\nvar o =\n/*#__PURE__*/\n_curry3(function o(f, g, x) {\n  return f(g(x));\n});\n\nexport default o;","import _curry1 from \"./internal/_curry1.js\";\nimport _of from \"./internal/_of.js\";\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\nvar of =\n/*#__PURE__*/\n_curry1(_of);\n\nexport default of;","export default function _of(x) {\n  return [x];\n}","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\nvar omit =\n/*#__PURE__*/\n_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default omit;","import curryN from \"./internal/_curryN.js\";\n/**\n * Takes a binary function `f`, a unary function `g`, and two values.\n * Applies `g` to each value, then applies the result of each to `f`.\n *\n * Also known as the P combinator.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig ((a, a) -> b) -> (c -> a) -> c -> c -> b\n * @param {Function} f a binary function\n * @param {Function} g a unary function\n * @param {any} a any value\n * @param {any} b any value\n * @return {any} The result of `f`\n * @example\n *\n *      const eqBy = R.on((a, b) => a === b);\n *      eqBy(R.prop('a'), {b:0, a:1}, {a:1}) //=> true;\n *\n *      const containsInsensitive = R.on(R.contains, R.toLower);\n *      containsInsensitive('o', 'FOO'); //=> true\n * @symb R.on(f, g, a, b) = f(g(a), g(b))\n */\n\nvar on =\n/*#__PURE__*/\ncurryN(4, [], function on(f, g, a, b) {\n  return f(g(a), g(b));\n});\nexport default on;","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\nvar once =\n/*#__PURE__*/\n_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\nexport default once;","import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.andThen\n * @example\n *\n *      const failedFetch = id => Promise.reject('bad ID');\n *      const useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' });\n *\n *      //recoverFromFailure :: String -> Promise ({ firstName, lastName })\n *      const recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.andThen(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log);\n */\n\nvar otherwise =\n/*#__PURE__*/\n_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\n\nexport default otherwise;","import _isFunction from \"./_isFunction.js\";\nimport _toString from \"./_toString.js\";\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}","import _curry3 from \"./internal/_curry3.js\"; // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\n\nvar Identity = function (x) {\n  return {\n    value: x,\n    map: function (f) {\n      return Identity(f(x));\n    }\n  };\n};\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.set, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nvar over =\n/*#__PURE__*/\n_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\n\nexport default over;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\n\nvar pair =\n/*#__PURE__*/\n_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\n\nexport default pair;","import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(3); //=> 6\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\n\nvar partial =\n/*#__PURE__*/\n_createPartialApplicator(_concat);\n\nexport default partial;","import _arity from \"./_arity.js\";\nimport _curry2 from \"./_curry2.js\";\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\nimport flip from \"./flip.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\n\nvar partialRight =\n/*#__PURE__*/\n_createPartialApplicator(\n/*#__PURE__*/\nflip(_concat));\n\nexport default partialRight;","import filter from \"./filter.js\";\nimport juxt from \"./juxt.js\";\nimport reject from \"./reject.js\";\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\nvar partition =\n/*#__PURE__*/\njuxt([filter, reject]);\nexport default partition;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\nimport path from \"./path.js\";\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\nvar pathEq =\n/*#__PURE__*/\n_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\nexport default pathEq;","import _curry3 from \"./internal/_curry3.js\";\nimport defaultTo from \"./defaultTo.js\";\nimport path from \"./path.js\";\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\nvar pathOr =\n/*#__PURE__*/\n_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\nexport default pathOr;","import _curry3 from \"./internal/_curry3.js\";\nimport path from \"./path.js\";\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int | Symbol\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n *      R.pathSatisfies(R.is(Object), [], {x: {y: 2}}); //=> true\n */\n\nvar pathSatisfies =\n/*#__PURE__*/\n_curry3(function pathSatisfies(pred, propPath, obj) {\n  return pred(path(propPath, obj));\n});\n\nexport default pathSatisfies;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pick;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\nvar pickAll =\n/*#__PURE__*/\n_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pickAll;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\nvar pickBy =\n/*#__PURE__*/\n_curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default pickBy;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nexport default prepend;","import multiply from \"./multiply.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\n\nvar product =\n/*#__PURE__*/\nreduce(multiply, 1);\nexport default product;","import _map from \"./internal/_map.js\";\nimport identity from \"./identity.js\";\nimport pickAll from \"./pickAll.js\";\nimport useWith from \"./useWith.js\";\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @see R.pluck, R.props, R.prop\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\n\nvar project =\n/*#__PURE__*/\nuseWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\nexport default project;","import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\nvar useWith =\n/*#__PURE__*/\n_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\nexport default useWith;","import _curry3 from \"./internal/_curry3.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _promap from \"./internal/_promap.js\";\nimport _xpromap from \"./internal/_xpromap.js\";\n/**\n * Takes two functions as pre- and post- processors respectively for a third function,\n * i.e. `promap(f, g, h)(x) === g(h(f(x)))`.\n *\n * Dispatches to the `promap` method of the third argument, if present,\n * according to the [FantasyLand Profunctor spec](https://github.com/fantasyland/fantasy-land#profunctor).\n *\n * Acts as a transducer if a transformer is given in profunctor position.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (a -> b) -> (c -> d) -> (b -> c) -> (a -> d)\n * @sig Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n * @param {Function} f The preprocessor function, a -> b\n * @param {Function} g The postprocessor function, c -> d\n * @param {Profunctor} profunctor The profunctor instance to be promapped, e.g. b -> c\n * @return {Profunctor} The new profunctor instance, e.g. a -> d\n * @see R.transduce\n * @example\n *\n *      const decodeChar = R.promap(s => s.charCodeAt(), String.fromCharCode, R.add(-8))\n *      const decodeString = R.promap(R.split(''), R.join(''), R.map(decodeChar))\n *      decodeString(\"ziuli\") //=> \"ramda\"\n *\n * @symb R.promap(f, g, h) = x => g(h(f(x)))\n * @symb R.promap(f, g, profunctor) = profunctor.promap(f, g)\n */\n\nvar promap =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/promap', 'promap'], _xpromap, _promap));\n\nexport default promap;","export default function _promap(f, g, profunctor) {\n  return function (x) {\n    return g(profunctor(f(x)));\n  };\n}","import _curry3 from \"./_curry3.js\";\nimport _xfBase from \"./_xfBase.js\";\nimport _promap from \"./_promap.js\";\n\nvar XPromap =\n/*#__PURE__*/\nfunction () {\n  function XPromap(f, g, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.g = g;\n  }\n\n  XPromap.prototype['@@transducer/init'] = _xfBase.init;\n  XPromap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XPromap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, _promap(this.f, this.g, input));\n  };\n\n  return XPromap;\n}();\n\nvar _xpromap =\n/*#__PURE__*/\n_curry3(function _xpromap(f, g, xf) {\n  return new XPromap(f, g, xf);\n});\n\nexport default _xpromap;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\nvar propEq =\n/*#__PURE__*/\n_curry3(function propEq(name, val, obj) {\n  return equals(val, prop(name, obj));\n});\n\nexport default propEq;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\nimport is from \"./is.js\";\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\n\nvar propIs =\n/*#__PURE__*/\n_curry3(function propIs(type, name, obj) {\n  return is(type, prop(name, obj));\n});\n\nexport default propIs;","import _curry3 from \"./internal/_curry3.js\";\nimport defaultTo from \"./defaultTo.js\";\nimport prop from \"./prop.js\";\n/**\n * Return the specified property of the given non-null object if the property\n * is present and it's value is not `null`, `undefined` or `NaN`.\n *\n * Otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\n\nvar propOr =\n/*#__PURE__*/\n_curry3(function propOr(val, p, obj) {\n  return defaultTo(val, prop(p, obj));\n});\n\nexport default propOr;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\nvar propSatisfies =\n/*#__PURE__*/\n_curry3(function propSatisfies(pred, name, obj) {\n  return pred(prop(name, obj));\n});\n\nexport default propSatisfies;","import _curry2 from \"./internal/_curry2.js\";\nimport path from \"./path.js\";\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @see R.prop, R.pluck, R.project\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\nvar props =\n/*#__PURE__*/\n_curry2(function props(ps, obj) {\n  return ps.map(function (p) {\n    return path([p], obj);\n  });\n});\n\nexport default props;","import _curry2 from \"./internal/_curry2.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\nvar range =\n/*#__PURE__*/\n_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nexport default range;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*. `reduceRight` may use [`reduced`](#reduced)\n * to short circuit the iteration.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex, R.reduced\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\n\nvar reduceRight =\n/*#__PURE__*/\n_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx -= 1;\n  }\n\n  return acc;\n});\n\nexport default reduceRight;","import _curryN from \"./internal/_curryN.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator. `reduceWhile` may alternatively be short-circuited\n * via [`reduced`](#reduced).\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 !== 0;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\nvar reduceWhile =\n/*#__PURE__*/\n_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\nexport default reduceWhile;","import _curry1 from \"./internal/_curry1.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * This optimization is available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`reduceBy`](#reduceBy)\n * - [`reduceRight`](#reduceRight)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.reduceBy, R.reduceRight, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nvar reduced =\n/*#__PURE__*/\n_curry1(_reduced);\n\nexport default reduced;","import _curry2 from \"./internal/_curry2.js\";\nimport always from \"./always.js\";\nimport times from \"./times.js\";\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});\n\nexport default times;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nexport default replace;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\n\nvar scan =\n/*#__PURE__*/\n_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default scan;","import _curry2 from \"./internal/_curry2.js\";\nimport ap from \"./ap.js\";\nimport map from \"./map.js\";\nimport prepend from \"./prepend.js\";\nimport reduceRight from \"./reduceRight.js\";\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\n\nvar sequence =\n/*#__PURE__*/\n_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\n\nexport default sequence;","import _curry3 from \"./internal/_curry3.js\";\nimport always from \"./always.js\";\nimport over from \"./over.js\";\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\nvar set =\n/*#__PURE__*/\n_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nexport default set;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @see R.ascend, R.descend\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\nvar sort =\n/*#__PURE__*/\n_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\nexport default sort;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy =\n/*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @see R.ascend, R.descend\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\n\nvar sortWith =\n/*#__PURE__*/\n_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n\n    return result;\n  });\n});\n\nexport default sortWith;","import invoker from \"./invoker.js\";\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `sep`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\nvar split =\n/*#__PURE__*/\ninvoker(1, 'split');\nexport default split;","import _curry2 from \"./internal/_curry2.js\";\nimport length from \"./length.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nexport default splitAt;","import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\n\nvar splitEvery =\n/*#__PURE__*/\n_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n\n  var result = [];\n  var idx = 0;\n\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n\n  return result;\n});\n\nexport default splitEvery;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\n\nvar splitWhen =\n/*#__PURE__*/\n_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\nexport default splitWhen;","import _curryN from \"./internal/_curryN.js\";\n/**\n * Splits an array into slices on every occurrence of a value.\n *\n * @func\n * @memberOf R\n * @since v0.26.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhenever(R.equals(2), [1, 2, 3, 2, 4, 5, 2, 6, 7]); //=> [[1], [3], [4, 5], [6, 7]]\n */\n\nvar splitWhenever =\n/*#__PURE__*/\n_curryN(2, [], function splitWhenever(pred, list) {\n  var acc = [];\n  var curr = [];\n\n  for (var i = 0; i < list.length; i = i + 1) {\n    if (!pred(list[i])) {\n      curr.push(list[i]);\n    }\n\n    if ((i < list.length - 1 && pred(list[i + 1]) || i === list.length - 1) && curr.length > 0) {\n      acc.push(curr);\n      curr = [];\n    }\n  }\n\n  return acc;\n});\n\nexport default splitWhenever;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport take from \"./take.js\";\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar startsWith =\n/*#__PURE__*/\n_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n\nexport default startsWith;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\n\nvar subtract =\n/*#__PURE__*/\n_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\nexport default subtract;","import _curry2 from \"./internal/_curry2.js\";\nimport concat from \"./concat.js\";\nimport difference from \"./difference.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\n\nvar symmetricDifference =\n/*#__PURE__*/\n_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\nexport default symmetricDifference;","import _curry3 from \"./internal/_curry3.js\";\nimport concat from \"./concat.js\";\nimport differenceWith from \"./differenceWith.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\n\nvar symmetricDifferenceWith =\n/*#__PURE__*/\n_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\nexport default symmetricDifferenceWith;","import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\n\nvar takeLastWhile =\n/*#__PURE__*/\n_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(idx + 1, Infinity, xs);\n});\n\nexport default takeLastWhile;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtakeWhile from \"./internal/_xtakeWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\n\nvar takeWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(0, idx, xs);\n}));\n\nexport default takeWhile;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTakeWhile =\n/*#__PURE__*/\nfunction () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile =\n/*#__PURE__*/\n_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\n\nexport default _xtakeWhile;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtap from \"./internal/_xtap.js\";\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTap =\n/*#__PURE__*/\nfunction () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap =\n/*#__PURE__*/\n_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\n\nexport default _xtap;","import _cloneRegExp from \"./internal/_cloneRegExp.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _isRegExp from \"./internal/_isRegExp.js\";\nimport toString from \"./toString.js\";\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nexport default test;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      const makeQuery = email => ({ query: { email }});\n *      const fetchMember = request =>\n *        Promise.resolve({ firstName: 'Bob', lastName: 'Loblaw', id: 42 });\n *\n *      //getMemberName :: String -> Promise ({ firstName, lastName })\n *      const getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.andThen(R.pick(['firstName', 'lastName']))\n *      );\n *\n *      getMemberName('bob@gmail.com').then(console.log);\n */\n\nvar andThen =\n/*#__PURE__*/\n_curry2(function andThen(f, p) {\n  _assertPromise('andThen', p);\n\n  return p.then(f);\n});\n\nexport default andThen;","import invoker from \"./invoker.js\";\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs, R.keys, R.values\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\n\nvar toPairsIn =\n/*#__PURE__*/\n_curry1(function toPairsIn(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n\n  return pairs;\n});\n\nexport default toPairsIn;","import invoker from \"./invoker.js\";\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from \"./internal/_reduce.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 !== 0;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\n\nvar transduce =\n/*#__PURE__*/\ncurryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\n\nvar transpose =\n/*#__PURE__*/\n_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n\n    i += 1;\n  }\n\n  return result;\n});\n\nexport default transpose;","import _curry3 from \"./internal/_curry3.js\";\nimport map from \"./map.js\";\nimport sequence from \"./sequence.js\";\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\n\nvar traverse =\n/*#__PURE__*/\n_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : typeof traversable.traverse === 'function' ? traversable.traverse(f, of) : sequence(of, map(f, traversable));\n});\n\nexport default traverse;","import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _arity from \"./internal/_arity.js\";\nimport _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send them to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('caught'))('bar') // =>\n *      'caught'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n *      R.tryCatch(() => { throw 'this is not a valid value'}, (err, value)=>({error : err,  value }))('bar') // => {'error': 'this is not a valid value', 'value': 'bar'}\n */\n\nvar tryCatch =\n/*#__PURE__*/\n_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\nexport default tryCatch;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\nvar unapply =\n/*#__PURE__*/\n_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\nexport default unapply;","import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (a -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\nvar unary =\n/*#__PURE__*/\n_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\nexport default unary;","import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n * Note that, the returned function is actually a ramda style\n * curryied function, which can accept one or more arguments in each\n * function calling.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b -> c ... -> z) -> ((a -> b -> c ...) -> z)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry, R.curryN\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\n\nvar uncurryN =\n/*#__PURE__*/\n_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n\n    return value;\n  });\n});\n\nexport default uncurryN;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\n\nvar unfold =\n/*#__PURE__*/\n_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});\n\nexport default unfold;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport compose from \"./compose.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\nvar union =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\ncompose(uniq, _concat));\n\nexport default union;","import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport uniqWith from \"./uniqWith.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements. If an element exists\n * in both lists, the first element from the first list will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\n\nvar unionWith =\n/*#__PURE__*/\n_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\nexport default unionWith;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _includesWith from \"./internal/_includesWith.js\";\nimport _xuniqWith from \"./internal/_xuniqWith.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqWith, function (pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqWith;","import _curry2 from \"./_curry2.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XUniqWith =\n/*#__PURE__*/\nfunction () {\n  function XUniqWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.items = [];\n  }\n\n  XUniqWith.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XUniqWith.prototype['@@transducer/step'] = function (result, input) {\n    if (_includesWith(this.pred, input, this.items)) {\n      return result;\n    } else {\n      this.items.push(input);\n      return this.xf['@@transducer/step'](result, input);\n    }\n  };\n\n  return XUniqWith;\n}();\n\nvar _xuniqWith =\n/*#__PURE__*/\n_curry2(function _xuniqWith(pred, xf) {\n  return new XUniqWith(pred, xf);\n});\n\nexport default _xuniqWith;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;","import _identity from \"./internal/_identity.js\";\nimport chain from \"./chain.js\";\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\n\nvar unnest =\n/*#__PURE__*/\nchain(_identity);\nexport default unnest;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\n\nvar until =\n/*#__PURE__*/\n_curry3(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\n\nexport default until;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _map from \"./internal/_map.js\";\nimport _assoc from \"./internal/_assoc.js\";\n/**\n *\n * Deconstructs an array field from the input documents to output a document for each element.\n * Each output document is the input document with the value of the array field replaced by the element.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig String -> {k: [v]} -> [{k: v}]\n * @param {String} key The key to determine which property of the object should be unwind\n * @param {Object} object The object containing list under property named as key which is to unwind\n * @return {List} A new list of object containing the value of input key having list replaced by each element in the object.\n * @example\n *\n * R.unwind('hobbies', {\n *   name: 'alice',\n *   hobbies: ['Golf', 'Hacking'],\n *   colors: ['red', 'green'],\n * });\n * // [\n * //   { name: 'alice', hobbies: 'Golf', colors: ['red', 'green'] },\n * //   { name: 'alice', hobbies: 'Hacking', colors: ['red', 'green'] }\n * // ]\n */\n\nvar unwind =\n/*#__PURE__*/\n_curry2(function (key, object) {\n  // If key is not in object or key is not as a list in object\n  if (!(key in object && _isArray(object[key]))) {\n    return [object];\n  } // Map over object[key] which is a list and assoc each element with key\n\n\n  return _map(function (item) {\n    return _assoc(key, item, object);\n  }, object[key]);\n});\n\nexport default unwind;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\n\nvar valuesIn =\n/*#__PURE__*/\n_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n\n  return vs;\n});\n\nexport default valuesIn;","import _curry2 from \"./internal/_curry2.js\"; // `Const` is a functor that effectively ignores the function given to `map`.\n\nvar Const = function (x) {\n  return {\n    value: x,\n    'fantasy-land/map': function () {\n      return this;\n    }\n  };\n};\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.set, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\n\n\nvar view =\n/*#__PURE__*/\n_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\n\nexport default view;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\nvar when =\n/*#__PURE__*/\n_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\nexport default when;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\nvar where =\n/*#__PURE__*/\n_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default where;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `whereAny` returns true if at least one of the predicates return true,\n * false otherwise.\n *\n * `whereAny` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereAny({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('xxx')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 8, y: 34}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 9, y: 21}); //=> false\n *      pred({a: 'bar', b: 'xxx', x: 10, y: 20}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 10, y: 20}); //=> true\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> true\n */\n\nvar whereAny =\n/*#__PURE__*/\n_curry2(function whereAny(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && spec[prop](testObj[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n});\n\nexport default whereAny;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport map from \"./map.js\";\nimport where from \"./where.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\n\nvar whereEq =\n/*#__PURE__*/\n_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\nexport default whereEq;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport flip from \"./flip.js\";\nimport reject from \"./reject.js\";\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\n\nexport default without;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Exclusive disjunction logical operation.\n * Returns `true` if one of the arguments is truthy and the other is falsy.\n * Otherwise, it returns `false`.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {Any} a\n * @param {Any} b\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\n * @see R.or, R.and\n * @example\n *\n *      R.xor(true, true); //=> false\n *      R.xor(true, false); //=> true\n *      R.xor(false, true); //=> true\n *      R.xor(false, false); //=> false\n */\n\nvar xor =\n/*#__PURE__*/\n_curry2(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\n\nexport default xor;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\nvar xprod =\n/*#__PURE__*/\n_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default xprod;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\nvar zip =\n/*#__PURE__*/\n_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zip;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default zipObj;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\n\nvar zipWith =\n/*#__PURE__*/\n_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zipWith;","import curryN from \"./curryN.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\n\nvar thunkify =\n/*#__PURE__*/\n_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;"],"names":[],"version":3,"file":"index.3d214d75.js.map","sourceRoot":"/__parcel_source_root/"}