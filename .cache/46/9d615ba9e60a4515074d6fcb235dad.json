{"id":"node_modules/ramda/es/when.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/when.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry3.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\nvar when = /*#__PURE__*/\n(0, _curry.default)(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nvar _default = when;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":1,"column":44}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":28,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":29,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":4},"source":"node_modules/ramda/es/when.js","original":{"line":31,"column":4},"name":"when"},{"generated":{"line":38,"column":8},"source":"node_modules/ramda/es/when.js","original":{"line":31,"column":8}},{"generated":{"line":38,"column":11},"source":"node_modules/ramda/es/when.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":0}},{"generated":{"line":39,"column":4},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":0},"name":"_curry3"},{"generated":{"line":39,"column":18},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":7}},{"generated":{"line":39,"column":20},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":8}},{"generated":{"line":39,"column":29},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":17},"name":"when"},{"generated":{"line":39,"column":33},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":21}},{"generated":{"line":39,"column":34},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":22},"name":"pred"},{"generated":{"line":39,"column":38},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":26}},{"generated":{"line":39,"column":40},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":28},"name":"whenTrueFn"},{"generated":{"line":39,"column":50},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":38}},{"generated":{"line":39,"column":52},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":40},"name":"x"},{"generated":{"line":39,"column":53},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":41}},{"generated":{"line":39,"column":55},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":43}},{"generated":{"line":40,"column":2},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":2}},{"generated":{"line":40,"column":9},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":9},"name":"pred"},{"generated":{"line":40,"column":13},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":13}},{"generated":{"line":40,"column":14},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":14},"name":"x"},{"generated":{"line":40,"column":15},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":15}},{"generated":{"line":40,"column":16},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":16}},{"generated":{"line":40,"column":19},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":19},"name":"whenTrueFn"},{"generated":{"line":40,"column":29},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":29}},{"generated":{"line":40,"column":30},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":30},"name":"x"},{"generated":{"line":40,"column":31},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":31}},{"generated":{"line":40,"column":32},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":32}},{"generated":{"line":40,"column":35},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":35},"name":"x"},{"generated":{"line":40,"column":36},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":36}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":35,"column":0}},{"generated":{"line":41,"column":1},"source":"node_modules/ramda/es/when.js","original":{"line":35,"column":1}},{"generated":{"line":41,"column":2},"source":"node_modules/ramda/es/when.js","original":{"line":35,"column":2}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":35,"column":3}},{"generated":{"line":42,"column":15},"source":"node_modules/ramda/es/when.js","original":{"line":37,"column":15},"name":"when"},{"generated":{"line":42,"column":19},"source":"node_modules/ramda/es/when.js","original":{"line":37,"column":19}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":37,"column":19}}],"sources":{"node_modules/ramda/es/when.js":"import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\nvar when =\n/*#__PURE__*/\n_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\nexport default when;"},"lineCount":null}},"error":null,"hash":"ea503d6ec309e2975890b20fd9b6af71","cacheData":{"env":{}}}