{"id":"node_modules/ramda/es/isEmpty.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/isEmpty.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry1.js"},{"name":"./empty.js","loc":{"line":2,"column":18,"index":63},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/isEmpty.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/empty.js"},{"name":"./equals.js","loc":{"line":3,"column":19,"index":96},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/isEmpty.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/equals.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\nvar _empty = _interopRequireDefault(require(\"./empty.js\"));\nvar _equals = _interopRequireDefault(require(\"./equals.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);           //=> false\n *      R.isEmpty([]);                  //=> true\n *      R.isEmpty('');                  //=> true\n *      R.isEmpty(null);                //=> false\n *      R.isEmpty({});                  //=> true\n *      R.isEmpty({length: 0});         //=> false\n *      R.isEmpty(Uint8Array.from('')); //=> true\n */\n\nvar isEmpty = /*#__PURE__*/\n(0, _curry.default)(function isEmpty(x) {\n  return x != null && (0, _equals.default)(x, (0, _empty.default)(x));\n});\nvar _default = isEmpty;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":3,"column":33}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":25,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":4},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":4},"name":"isEmpty"},{"generated":{"line":34,"column":11},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":11}},{"generated":{"line":34,"column":14},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":0}},{"generated":{"line":35,"column":4},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":0},"name":"_curry1"},{"generated":{"line":35,"column":18},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":7}},{"generated":{"line":35,"column":20},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":8}},{"generated":{"line":35,"column":29},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":17},"name":"isEmpty"},{"generated":{"line":35,"column":36},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":24}},{"generated":{"line":35,"column":37},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":25},"name":"x"},{"generated":{"line":35,"column":38},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":26}},{"generated":{"line":35,"column":40},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":28}},{"generated":{"line":36,"column":2},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":2}},{"generated":{"line":36,"column":9},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":9},"name":"x"},{"generated":{"line":36,"column":10},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":10}},{"generated":{"line":36,"column":14},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":14}},{"generated":{"line":36,"column":18},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":18}},{"generated":{"line":36,"column":22},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":22}},{"generated":{"line":36,"column":26},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":22},"name":"equals"},{"generated":{"line":36,"column":41},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":28}},{"generated":{"line":36,"column":43},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":29},"name":"x"},{"generated":{"line":36,"column":44},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":30}},{"generated":{"line":36,"column":46},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":32}},{"generated":{"line":36,"column":50},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":32},"name":"empty"},{"generated":{"line":36,"column":64},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":37}},{"generated":{"line":36,"column":66},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":38},"name":"x"},{"generated":{"line":36,"column":67},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":39}},{"generated":{"line":36,"column":68},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":40}},{"generated":{"line":36,"column":69},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":30,"column":41}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":31,"column":0}},{"generated":{"line":37,"column":1},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":31,"column":1}},{"generated":{"line":37,"column":2},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":31,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":31,"column":3}},{"generated":{"line":38,"column":15},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":33,"column":15},"name":"isEmpty"},{"generated":{"line":38,"column":22},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":33,"column":22}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/isEmpty.js","original":{"line":33,"column":22}}],"sources":{"node_modules/ramda/es/isEmpty.js":"import _curry1 from \"./internal/_curry1.js\";\nimport empty from \"./empty.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);           //=> false\n *      R.isEmpty([]);                  //=> true\n *      R.isEmpty('');                  //=> true\n *      R.isEmpty(null);                //=> false\n *      R.isEmpty({});                  //=> true\n *      R.isEmpty({length: 0});         //=> false\n *      R.isEmpty(Uint8Array.from('')); //=> true\n */\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nexport default isEmpty;"},"lineCount":null}},"error":null,"hash":"5ce7f1187a43ddf1b980f7aee7a539c0","cacheData":{"env":{}}}