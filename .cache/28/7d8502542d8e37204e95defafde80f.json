{"id":"node_modules/ramda/es/unless.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/unless.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry3.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless = /*#__PURE__*/\n(0, _curry.default)(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nvar _default = unless;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":1,"column":44}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":25,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":4},"source":"node_modules/ramda/es/unless.js","original":{"line":27,"column":4},"name":"unless"},{"generated":{"line":34,"column":10},"source":"node_modules/ramda/es/unless.js","original":{"line":27,"column":10}},{"generated":{"line":34,"column":13},"source":"node_modules/ramda/es/unless.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":0}},{"generated":{"line":35,"column":4},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":0},"name":"_curry3"},{"generated":{"line":35,"column":18},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":7}},{"generated":{"line":35,"column":20},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":8}},{"generated":{"line":35,"column":29},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":17},"name":"unless"},{"generated":{"line":35,"column":35},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":23}},{"generated":{"line":35,"column":36},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":24},"name":"pred"},{"generated":{"line":35,"column":40},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":28}},{"generated":{"line":35,"column":42},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":30},"name":"whenFalseFn"},{"generated":{"line":35,"column":53},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":41}},{"generated":{"line":35,"column":55},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":43},"name":"x"},{"generated":{"line":35,"column":56},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":44}},{"generated":{"line":35,"column":58},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":46}},{"generated":{"line":36,"column":2},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":2}},{"generated":{"line":36,"column":9},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":9},"name":"pred"},{"generated":{"line":36,"column":13},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":13}},{"generated":{"line":36,"column":14},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":14},"name":"x"},{"generated":{"line":36,"column":15},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":15}},{"generated":{"line":36,"column":16},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":16}},{"generated":{"line":36,"column":19},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":19},"name":"x"},{"generated":{"line":36,"column":20},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":20}},{"generated":{"line":36,"column":23},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":23},"name":"whenFalseFn"},{"generated":{"line":36,"column":34},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":34}},{"generated":{"line":36,"column":35},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":35},"name":"x"},{"generated":{"line":36,"column":36},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":36}},{"generated":{"line":36,"column":37},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":37}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":31,"column":0}},{"generated":{"line":37,"column":1},"source":"node_modules/ramda/es/unless.js","original":{"line":31,"column":1}},{"generated":{"line":37,"column":2},"source":"node_modules/ramda/es/unless.js","original":{"line":31,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":31,"column":3}},{"generated":{"line":38,"column":15},"source":"node_modules/ramda/es/unless.js","original":{"line":33,"column":15},"name":"unless"},{"generated":{"line":38,"column":21},"source":"node_modules/ramda/es/unless.js","original":{"line":33,"column":21}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":33,"column":21}}],"sources":{"node_modules/ramda/es/unless.js":"import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;"},"lineCount":null}},"error":null,"hash":"1d19cb7d38610d8f37137cc6d01ad3cf","cacheData":{"env":{}}}