{"id":"node_modules/ramda/es/otherwise.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/otherwise.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry2.js"},{"name":"./internal/_assertPromise.js","loc":{"line":2,"column":27,"index":72},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/otherwise.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_assertPromise.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\nvar _assertPromise2 = _interopRequireDefault(require(\"./internal/_assertPromise.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.andThen\n * @example\n *\n *      const failedFetch = id => Promise.reject('bad ID');\n *      const useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' });\n *\n *      //recoverFromFailure :: String -> Promise ({ firstName, lastName })\n *      const recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.andThen(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log);\n */\n\nvar otherwise = /*#__PURE__*/\n(0, _curry.default)(function otherwise(f, p) {\n  (0, _assertPromise2.default)('otherwise', p);\n  return p.then(null, f);\n});\nvar _default = otherwise;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":2,"column":58}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":28,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":29,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":30,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":4},"source":"node_modules/ramda/es/otherwise.js","original":{"line":32,"column":4},"name":"otherwise"},{"generated":{"line":39,"column":13},"source":"node_modules/ramda/es/otherwise.js","original":{"line":32,"column":13}},{"generated":{"line":39,"column":16},"source":"node_modules/ramda/es/otherwise.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":0}},{"generated":{"line":40,"column":4},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":0},"name":"_curry2"},{"generated":{"line":40,"column":18},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":7}},{"generated":{"line":40,"column":20},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":8}},{"generated":{"line":40,"column":29},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":17},"name":"otherwise"},{"generated":{"line":40,"column":38},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":26}},{"generated":{"line":40,"column":39},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":27},"name":"f"},{"generated":{"line":40,"column":40},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":28}},{"generated":{"line":40,"column":42},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":30},"name":"p"},{"generated":{"line":40,"column":43},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":31}},{"generated":{"line":40,"column":45},"source":"node_modules/ramda/es/otherwise.js","original":{"line":34,"column":33}},{"generated":{"line":41,"column":2},"source":"node_modules/ramda/es/otherwise.js","original":{"line":35,"column":2}},{"generated":{"line":41,"column":6},"source":"node_modules/ramda/es/otherwise.js","original":{"line":35,"column":2},"name":"_assertPromise"},{"generated":{"line":41,"column":29},"source":"node_modules/ramda/es/otherwise.js","original":{"line":35,"column":16}},{"generated":{"line":41,"column":31},"source":"node_modules/ramda/es/otherwise.js","original":{"line":35,"column":17}},{"generated":{"line":41,"column":42},"source":"node_modules/ramda/es/otherwise.js","original":{"line":35,"column":28}},{"generated":{"line":41,"column":44},"source":"node_modules/ramda/es/otherwise.js","original":{"line":35,"column":30},"name":"p"},{"generated":{"line":41,"column":45},"source":"node_modules/ramda/es/otherwise.js","original":{"line":35,"column":31}},{"generated":{"line":41,"column":46},"source":"node_modules/ramda/es/otherwise.js","original":{"line":35,"column":32}},{"generated":{"line":42,"column":2},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":2}},{"generated":{"line":42,"column":9},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":9},"name":"p"},{"generated":{"line":42,"column":10},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":10}},{"generated":{"line":42,"column":11},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":11},"name":"then"},{"generated":{"line":42,"column":15},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":15}},{"generated":{"line":42,"column":16},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":16}},{"generated":{"line":42,"column":20},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":20}},{"generated":{"line":42,"column":22},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":22},"name":"f"},{"generated":{"line":42,"column":23},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":23}},{"generated":{"line":42,"column":24},"source":"node_modules/ramda/es/otherwise.js","original":{"line":37,"column":24}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":38,"column":0}},{"generated":{"line":43,"column":1},"source":"node_modules/ramda/es/otherwise.js","original":{"line":38,"column":1}},{"generated":{"line":43,"column":2},"source":"node_modules/ramda/es/otherwise.js","original":{"line":38,"column":2}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":38,"column":3}},{"generated":{"line":44,"column":15},"source":"node_modules/ramda/es/otherwise.js","original":{"line":40,"column":15},"name":"otherwise"},{"generated":{"line":44,"column":24},"source":"node_modules/ramda/es/otherwise.js","original":{"line":40,"column":24}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/otherwise.js","original":{"line":40,"column":24}}],"sources":{"node_modules/ramda/es/otherwise.js":"import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.andThen\n * @example\n *\n *      const failedFetch = id => Promise.reject('bad ID');\n *      const useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' });\n *\n *      //recoverFromFailure :: String -> Promise ({ firstName, lastName })\n *      const recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.andThen(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log);\n */\n\nvar otherwise =\n/*#__PURE__*/\n_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\n\nexport default otherwise;"},"lineCount":null}},"error":null,"hash":"dc776daff2d0f8c846d2d580f528c691","cacheData":{"env":{}}}