{"id":"node_modules/ramda/es/indexBy.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./reduceBy.js","loc":{"line":1,"column":21,"index":21},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/indexBy.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/reduceBy.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _reduceBy = _interopRequireDefault(require(\"./reduceBy.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: b}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @see R.groupBy\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\nvar indexBy = /*#__PURE__*/\n(0, _reduceBy.default)(function (acc, elem) {\n  return elem;\n}, null);\nvar _default = indexBy;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":1,"column":37}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":25,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":4},"source":"node_modules/ramda/es/indexBy.js","original":{"line":27,"column":4},"name":"indexBy"},{"generated":{"line":34,"column":11},"source":"node_modules/ramda/es/indexBy.js","original":{"line":27,"column":11}},{"generated":{"line":34,"column":14},"source":"node_modules/ramda/es/indexBy.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":29,"column":0}},{"generated":{"line":35,"column":4},"source":"node_modules/ramda/es/indexBy.js","original":{"line":29,"column":0},"name":"reduceBy"},{"generated":{"line":35,"column":21},"source":"node_modules/ramda/es/indexBy.js","original":{"line":29,"column":8}},{"generated":{"line":35,"column":23},"source":"node_modules/ramda/es/indexBy.js","original":{"line":29,"column":9}},{"generated":{"line":35,"column":33},"source":"node_modules/ramda/es/indexBy.js","original":{"line":29,"column":19},"name":"acc"},{"generated":{"line":35,"column":36},"source":"node_modules/ramda/es/indexBy.js","original":{"line":29,"column":22}},{"generated":{"line":35,"column":38},"source":"node_modules/ramda/es/indexBy.js","original":{"line":29,"column":24},"name":"elem"},{"generated":{"line":35,"column":42},"source":"node_modules/ramda/es/indexBy.js","original":{"line":29,"column":28}},{"generated":{"line":35,"column":44},"source":"node_modules/ramda/es/indexBy.js","original":{"line":29,"column":30}},{"generated":{"line":36,"column":2},"source":"node_modules/ramda/es/indexBy.js","original":{"line":30,"column":2}},{"generated":{"line":36,"column":9},"source":"node_modules/ramda/es/indexBy.js","original":{"line":30,"column":9},"name":"elem"},{"generated":{"line":36,"column":13},"source":"node_modules/ramda/es/indexBy.js","original":{"line":30,"column":13}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":31,"column":0}},{"generated":{"line":37,"column":1},"source":"node_modules/ramda/es/indexBy.js","original":{"line":31,"column":1}},{"generated":{"line":37,"column":3},"source":"node_modules/ramda/es/indexBy.js","original":{"line":31,"column":3}},{"generated":{"line":37,"column":7},"source":"node_modules/ramda/es/indexBy.js","original":{"line":31,"column":7}},{"generated":{"line":37,"column":8},"source":"node_modules/ramda/es/indexBy.js","original":{"line":31,"column":8}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":31,"column":9}},{"generated":{"line":38,"column":15},"source":"node_modules/ramda/es/indexBy.js","original":{"line":32,"column":15},"name":"indexBy"},{"generated":{"line":38,"column":22},"source":"node_modules/ramda/es/indexBy.js","original":{"line":32,"column":22}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/indexBy.js","original":{"line":32,"column":22}}],"sources":{"node_modules/ramda/es/indexBy.js":"import reduceBy from \"./reduceBy.js\";\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: b}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @see R.groupBy\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;"},"lineCount":null}},"error":null,"hash":"d6ec345fa704f7d7c5bd0c9091085545","cacheData":{"env":{}}}