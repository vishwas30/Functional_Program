{"id":"node_modules/ramda/es/composeWith.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/composeWith.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry2.js"},{"name":"./pipeWith.js","loc":{"line":2,"column":21,"index":66},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/composeWith.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/pipeWith.js"},{"name":"./reverse.js","loc":{"line":3,"column":20,"index":103},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/composeWith.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/reverse.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\nvar _pipeWith = _interopRequireDefault(require(\"./pipeWith.js\"));\nvar _reverse = _interopRequireDefault(require(\"./reverse.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Performs right-to-left function composition using transforming function. The last function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of composeWith is not automatically curried. Transforming function is not used\n * on the last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\n\nvar composeWith = /*#__PURE__*/\n(0, _curry.default)(function composeWith(xf, list) {\n  return _pipeWith.default.apply(this, [xf, (0, _reverse.default)(list)]);\n});\nvar _default = composeWith;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":3,"column":35}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":28,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":4},"source":"node_modules/ramda/es/composeWith.js","original":{"line":30,"column":4},"name":"composeWith"},{"generated":{"line":37,"column":15},"source":"node_modules/ramda/es/composeWith.js","original":{"line":30,"column":15}},{"generated":{"line":37,"column":18},"source":"node_modules/ramda/es/composeWith.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":0}},{"generated":{"line":38,"column":4},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":0},"name":"_curry2"},{"generated":{"line":38,"column":18},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":7}},{"generated":{"line":38,"column":20},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":8}},{"generated":{"line":38,"column":29},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":17},"name":"composeWith"},{"generated":{"line":38,"column":40},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":28}},{"generated":{"line":38,"column":41},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":29},"name":"xf"},{"generated":{"line":38,"column":43},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":31}},{"generated":{"line":38,"column":45},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":33},"name":"list"},{"generated":{"line":38,"column":49},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":37}},{"generated":{"line":38,"column":51},"source":"node_modules/ramda/es/composeWith.js","original":{"line":32,"column":39}},{"generated":{"line":39,"column":2},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":2}},{"generated":{"line":39,"column":9},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":9},"name":"pipeWith"},{"generated":{"line":39,"column":26},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":17}},{"generated":{"line":39,"column":27},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":18},"name":"apply"},{"generated":{"line":39,"column":32},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":23}},{"generated":{"line":39,"column":33},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":24}},{"generated":{"line":39,"column":37},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":28}},{"generated":{"line":39,"column":39},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":30}},{"generated":{"line":39,"column":40},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":31},"name":"xf"},{"generated":{"line":39,"column":42},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":33}},{"generated":{"line":39,"column":44},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":35}},{"generated":{"line":39,"column":48},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":35},"name":"reverse"},{"generated":{"line":39,"column":64},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":42}},{"generated":{"line":39,"column":66},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":43},"name":"list"},{"generated":{"line":39,"column":70},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":47}},{"generated":{"line":39,"column":71},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":48}},{"generated":{"line":39,"column":72},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":49}},{"generated":{"line":39,"column":73},"source":"node_modules/ramda/es/composeWith.js","original":{"line":33,"column":50}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":34,"column":0}},{"generated":{"line":40,"column":1},"source":"node_modules/ramda/es/composeWith.js","original":{"line":34,"column":1}},{"generated":{"line":40,"column":2},"source":"node_modules/ramda/es/composeWith.js","original":{"line":34,"column":2}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":34,"column":3}},{"generated":{"line":41,"column":15},"source":"node_modules/ramda/es/composeWith.js","original":{"line":36,"column":15},"name":"composeWith"},{"generated":{"line":41,"column":26},"source":"node_modules/ramda/es/composeWith.js","original":{"line":36,"column":26}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/composeWith.js","original":{"line":36,"column":26}}],"sources":{"node_modules/ramda/es/composeWith.js":"import _curry2 from \"./internal/_curry2.js\";\nimport pipeWith from \"./pipeWith.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition using transforming function. The last function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of composeWith is not automatically curried. Transforming function is not used\n * on the last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\n\nvar composeWith =\n/*#__PURE__*/\n_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\n\nexport default composeWith;"},"lineCount":null}},"error":null,"hash":"e24133095cb2426a25e1d905308b427a","cacheData":{"env":{}}}