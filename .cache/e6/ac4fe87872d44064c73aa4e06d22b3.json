{"id":"node_modules/ramda/es/xor.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/xor.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Exclusive disjunction logical operation.\n * Returns `true` if one of the arguments is truthy and the other is falsy.\n * Otherwise, it returns `false`.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {Any} a\n * @param {Any} b\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\n * @see R.or, R.and\n * @example\n *\n *      R.xor(true, true); //=> false\n *      R.xor(true, false); //=> true\n *      R.xor(false, true); //=> true\n *      R.xor(false, false); //=> false\n */\n\nvar xor = /*#__PURE__*/\n(0, _curry.default)(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\nvar _default = xor;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":1,"column":44}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":22,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":4},"source":"node_modules/ramda/es/xor.js","original":{"line":24,"column":4},"name":"xor"},{"generated":{"line":31,"column":7},"source":"node_modules/ramda/es/xor.js","original":{"line":24,"column":7}},{"generated":{"line":31,"column":10},"source":"node_modules/ramda/es/xor.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":0}},{"generated":{"line":32,"column":4},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":0},"name":"_curry2"},{"generated":{"line":32,"column":18},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":7}},{"generated":{"line":32,"column":20},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":8}},{"generated":{"line":32,"column":29},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":17},"name":"xor"},{"generated":{"line":32,"column":32},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":20}},{"generated":{"line":32,"column":33},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":21},"name":"a"},{"generated":{"line":32,"column":34},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":22}},{"generated":{"line":32,"column":36},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":24},"name":"b"},{"generated":{"line":32,"column":37},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":25}},{"generated":{"line":32,"column":39},"source":"node_modules/ramda/es/xor.js","original":{"line":26,"column":27}},{"generated":{"line":33,"column":2},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":2}},{"generated":{"line":33,"column":9},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":9},"name":"Boolean"},{"generated":{"line":33,"column":16},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":16}},{"generated":{"line":33,"column":17},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":17}},{"generated":{"line":33,"column":18},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":18},"name":"a"},{"generated":{"line":33,"column":19},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":19}},{"generated":{"line":33,"column":22},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":22}},{"generated":{"line":33,"column":23},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":23},"name":"b"},{"generated":{"line":33,"column":24},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":24}},{"generated":{"line":33,"column":25},"source":"node_modules/ramda/es/xor.js","original":{"line":27,"column":25}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":28,"column":0}},{"generated":{"line":34,"column":1},"source":"node_modules/ramda/es/xor.js","original":{"line":28,"column":1}},{"generated":{"line":34,"column":2},"source":"node_modules/ramda/es/xor.js","original":{"line":28,"column":2}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":28,"column":3}},{"generated":{"line":35,"column":15},"source":"node_modules/ramda/es/xor.js","original":{"line":30,"column":15},"name":"xor"},{"generated":{"line":35,"column":18},"source":"node_modules/ramda/es/xor.js","original":{"line":30,"column":18}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/xor.js","original":{"line":30,"column":18}}],"sources":{"node_modules/ramda/es/xor.js":"import _curry2 from \"./internal/_curry2.js\";\n/**\n * Exclusive disjunction logical operation.\n * Returns `true` if one of the arguments is truthy and the other is falsy.\n * Otherwise, it returns `false`.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {Any} a\n * @param {Any} b\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\n * @see R.or, R.and\n * @example\n *\n *      R.xor(true, true); //=> false\n *      R.xor(true, false); //=> true\n *      R.xor(false, true); //=> true\n *      R.xor(false, false); //=> false\n */\n\nvar xor =\n/*#__PURE__*/\n_curry2(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\n\nexport default xor;"},"lineCount":null}},"error":null,"hash":"7872b5ebdac11ac7ea7fa50505409951","cacheData":{"env":{}}}