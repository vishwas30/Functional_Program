{"id":"node_modules/ramda/es/compose.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./pipe.js","loc":{"line":1,"column":17,"index":17},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/compose.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/pipe.js"},{"name":"./reverse.js","loc":{"line":2,"column":20,"index":50},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/compose.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/reverse.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compose;\nvar _pipe = _interopRequireDefault(require(\"./pipe.js\"));\nvar _reverse = _interopRequireDefault(require(\"./reverse.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n * @symb R.compose(f, g, h)(a)(b) = f(g(h(a)))(b)\n */\n\nfunction compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return _pipe.default.apply(this, (0, _reverse.default)(arguments));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":2,"column":35}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":27,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":29,"column":15}},{"generated":{"line":36,"column":9},"source":"node_modules/ramda/es/compose.js","original":{"line":29,"column":24},"name":"compose"},{"generated":{"line":36,"column":16},"source":"node_modules/ramda/es/compose.js","original":{"line":29,"column":31}},{"generated":{"line":36,"column":19},"source":"node_modules/ramda/es/compose.js","original":{"line":29,"column":34}},{"generated":{"line":37,"column":2},"source":"node_modules/ramda/es/compose.js","original":{"line":30,"column":2}},{"generated":{"line":37,"column":6},"source":"node_modules/ramda/es/compose.js","original":{"line":30,"column":6},"name":"arguments"},{"generated":{"line":37,"column":15},"source":"node_modules/ramda/es/compose.js","original":{"line":30,"column":15}},{"generated":{"line":37,"column":16},"source":"node_modules/ramda/es/compose.js","original":{"line":30,"column":16},"name":"length"},{"generated":{"line":37,"column":22},"source":"node_modules/ramda/es/compose.js","original":{"line":30,"column":22}},{"generated":{"line":37,"column":27},"source":"node_modules/ramda/es/compose.js","original":{"line":30,"column":27}},{"generated":{"line":37,"column":28},"source":"node_modules/ramda/es/compose.js","original":{"line":30,"column":28}},{"generated":{"line":37,"column":30},"source":"node_modules/ramda/es/compose.js","original":{"line":30,"column":30}},{"generated":{"line":38,"column":4},"source":"node_modules/ramda/es/compose.js","original":{"line":31,"column":4}},{"generated":{"line":38,"column":10},"source":"node_modules/ramda/es/compose.js","original":{"line":31,"column":10}},{"generated":{"line":38,"column":14},"source":"node_modules/ramda/es/compose.js","original":{"line":31,"column":14},"name":"Error"},{"generated":{"line":38,"column":19},"source":"node_modules/ramda/es/compose.js","original":{"line":31,"column":19}},{"generated":{"line":38,"column":20},"source":"node_modules/ramda/es/compose.js","original":{"line":31,"column":20}},{"generated":{"line":38,"column":60},"source":"node_modules/ramda/es/compose.js","original":{"line":31,"column":60}},{"generated":{"line":38,"column":61},"source":"node_modules/ramda/es/compose.js","original":{"line":31,"column":61}},{"generated":{"line":39,"column":2},"source":"node_modules/ramda/es/compose.js","original":{"line":32,"column":2}},{"generated":{"line":40,"column":2},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":2}},{"generated":{"line":40,"column":9},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":9},"name":"pipe"},{"generated":{"line":40,"column":22},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":13}},{"generated":{"line":40,"column":23},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":14},"name":"apply"},{"generated":{"line":40,"column":28},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":19}},{"generated":{"line":40,"column":29},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":20}},{"generated":{"line":40,"column":33},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":24}},{"generated":{"line":40,"column":35},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":26}},{"generated":{"line":40,"column":39},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":26},"name":"reverse"},{"generated":{"line":40,"column":55},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":33}},{"generated":{"line":40,"column":57},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":34},"name":"arguments"},{"generated":{"line":40,"column":66},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":43}},{"generated":{"line":40,"column":67},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":44}},{"generated":{"line":40,"column":68},"source":"node_modules/ramda/es/compose.js","original":{"line":34,"column":45}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/compose.js","original":{"line":35,"column":0}}],"sources":{"node_modules/ramda/es/compose.js":"import pipe from \"./pipe.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n * @symb R.compose(f, g, h)(a)(b) = f(g(h(a)))(b)\n */\n\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}"},"lineCount":null}},"error":null,"hash":"15cb82904e697a4fdb77c428c0056f4d","cacheData":{"env":{}}}