{"id":"node_modules/ramda/es/construct.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/construct.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry1.js"},{"name":"./constructN.js","loc":{"line":2,"column":23,"index":68},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/construct.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/constructN.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\nvar _constructN = _interopRequireDefault(require(\"./constructN.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\nvar construct = /*#__PURE__*/\n(0, _curry.default)(function construct(Fn) {\n  return (0, _constructN.default)(Fn.length, Fn);\n});\nvar _default = construct;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":2,"column":41}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":28,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":29,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":30,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":31,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":32,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":33,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":34,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":4},"source":"node_modules/ramda/es/construct.js","original":{"line":36,"column":4},"name":"construct"},{"generated":{"line":43,"column":13},"source":"node_modules/ramda/es/construct.js","original":{"line":36,"column":13}},{"generated":{"line":43,"column":16},"source":"node_modules/ramda/es/construct.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":38,"column":0}},{"generated":{"line":44,"column":4},"source":"node_modules/ramda/es/construct.js","original":{"line":38,"column":0},"name":"_curry1"},{"generated":{"line":44,"column":18},"source":"node_modules/ramda/es/construct.js","original":{"line":38,"column":7}},{"generated":{"line":44,"column":20},"source":"node_modules/ramda/es/construct.js","original":{"line":38,"column":8}},{"generated":{"line":44,"column":29},"source":"node_modules/ramda/es/construct.js","original":{"line":38,"column":17},"name":"construct"},{"generated":{"line":44,"column":38},"source":"node_modules/ramda/es/construct.js","original":{"line":38,"column":26}},{"generated":{"line":44,"column":39},"source":"node_modules/ramda/es/construct.js","original":{"line":38,"column":27},"name":"Fn"},{"generated":{"line":44,"column":41},"source":"node_modules/ramda/es/construct.js","original":{"line":38,"column":29}},{"generated":{"line":44,"column":43},"source":"node_modules/ramda/es/construct.js","original":{"line":38,"column":31}},{"generated":{"line":45,"column":2},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":2}},{"generated":{"line":45,"column":9},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":9}},{"generated":{"line":45,"column":13},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":9},"name":"constructN"},{"generated":{"line":45,"column":32},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":19}},{"generated":{"line":45,"column":34},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":20},"name":"Fn"},{"generated":{"line":45,"column":36},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":22}},{"generated":{"line":45,"column":37},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":23},"name":"length"},{"generated":{"line":45,"column":43},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":29}},{"generated":{"line":45,"column":45},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":31},"name":"Fn"},{"generated":{"line":45,"column":47},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":33}},{"generated":{"line":45,"column":48},"source":"node_modules/ramda/es/construct.js","original":{"line":39,"column":34}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":40,"column":0}},{"generated":{"line":46,"column":1},"source":"node_modules/ramda/es/construct.js","original":{"line":40,"column":1}},{"generated":{"line":46,"column":2},"source":"node_modules/ramda/es/construct.js","original":{"line":40,"column":2}},{"generated":{"line":47,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":40,"column":3}},{"generated":{"line":47,"column":15},"source":"node_modules/ramda/es/construct.js","original":{"line":42,"column":15},"name":"construct"},{"generated":{"line":47,"column":24},"source":"node_modules/ramda/es/construct.js","original":{"line":42,"column":24}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/construct.js","original":{"line":42,"column":24}}],"sources":{"node_modules/ramda/es/construct.js":"import _curry1 from \"./internal/_curry1.js\";\nimport constructN from \"./constructN.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\nvar construct =\n/*#__PURE__*/\n_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\nexport default construct;"},"lineCount":null}},"error":null,"hash":"6d5cacd239c1af3a7683a41bcd393aa8","cacheData":{"env":{}}}