{"id":"node_modules/ramda/es/unapply.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/unapply.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry1.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\nvar unapply = /*#__PURE__*/\n(0, _curry.default)(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nvar _default = unapply;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":1,"column":44}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":25,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":4},"source":"node_modules/ramda/es/unapply.js","original":{"line":27,"column":4},"name":"unapply"},{"generated":{"line":34,"column":11},"source":"node_modules/ramda/es/unapply.js","original":{"line":27,"column":11}},{"generated":{"line":34,"column":14},"source":"node_modules/ramda/es/unapply.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":29,"column":0}},{"generated":{"line":35,"column":4},"source":"node_modules/ramda/es/unapply.js","original":{"line":29,"column":0},"name":"_curry1"},{"generated":{"line":35,"column":18},"source":"node_modules/ramda/es/unapply.js","original":{"line":29,"column":7}},{"generated":{"line":35,"column":20},"source":"node_modules/ramda/es/unapply.js","original":{"line":29,"column":8}},{"generated":{"line":35,"column":29},"source":"node_modules/ramda/es/unapply.js","original":{"line":29,"column":17},"name":"unapply"},{"generated":{"line":35,"column":36},"source":"node_modules/ramda/es/unapply.js","original":{"line":29,"column":24}},{"generated":{"line":35,"column":37},"source":"node_modules/ramda/es/unapply.js","original":{"line":29,"column":25},"name":"fn"},{"generated":{"line":35,"column":39},"source":"node_modules/ramda/es/unapply.js","original":{"line":29,"column":27}},{"generated":{"line":35,"column":41},"source":"node_modules/ramda/es/unapply.js","original":{"line":29,"column":29}},{"generated":{"line":36,"column":2},"source":"node_modules/ramda/es/unapply.js","original":{"line":30,"column":2}},{"generated":{"line":36,"column":9},"source":"node_modules/ramda/es/unapply.js","original":{"line":30,"column":9}},{"generated":{"line":36,"column":21},"source":"node_modules/ramda/es/unapply.js","original":{"line":30,"column":21}},{"generated":{"line":37,"column":4},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":4}},{"generated":{"line":37,"column":11},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":11},"name":"fn"},{"generated":{"line":37,"column":13},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":13}},{"generated":{"line":37,"column":14},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":14},"name":"Array"},{"generated":{"line":37,"column":19},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":19}},{"generated":{"line":37,"column":20},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":20},"name":"prototype"},{"generated":{"line":37,"column":29},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":29}},{"generated":{"line":37,"column":30},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":30},"name":"slice"},{"generated":{"line":37,"column":35},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":35}},{"generated":{"line":37,"column":36},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":36},"name":"call"},{"generated":{"line":37,"column":40},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":40}},{"generated":{"line":37,"column":41},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":41},"name":"arguments"},{"generated":{"line":37,"column":50},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":50}},{"generated":{"line":37,"column":52},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":52}},{"generated":{"line":37,"column":53},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":53}},{"generated":{"line":37,"column":54},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":54}},{"generated":{"line":37,"column":55},"source":"node_modules/ramda/es/unapply.js","original":{"line":31,"column":55}},{"generated":{"line":38,"column":2},"source":"node_modules/ramda/es/unapply.js","original":{"line":32,"column":2}},{"generated":{"line":38,"column":3},"source":"node_modules/ramda/es/unapply.js","original":{"line":32,"column":3}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":33,"column":0}},{"generated":{"line":39,"column":1},"source":"node_modules/ramda/es/unapply.js","original":{"line":33,"column":1}},{"generated":{"line":39,"column":2},"source":"node_modules/ramda/es/unapply.js","original":{"line":33,"column":2}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":33,"column":3}},{"generated":{"line":40,"column":15},"source":"node_modules/ramda/es/unapply.js","original":{"line":35,"column":15},"name":"unapply"},{"generated":{"line":40,"column":22},"source":"node_modules/ramda/es/unapply.js","original":{"line":35,"column":22}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/unapply.js","original":{"line":35,"column":22}}],"sources":{"node_modules/ramda/es/unapply.js":"import _curry1 from \"./internal/_curry1.js\";\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\nvar unapply =\n/*#__PURE__*/\n_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\nexport default unapply;"},"lineCount":null}},"error":null,"hash":"6c8b88ac1d41fe8448e24bf36d62412c","cacheData":{"env":{}}}