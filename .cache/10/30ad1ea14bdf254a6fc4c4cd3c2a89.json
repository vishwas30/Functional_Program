{"id":"node_modules/ramda/es/count.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_reduce.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/count.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_reduce.js"},{"name":"./curry.js","loc":{"line":2,"column":18,"index":63},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/count.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/curry.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _reduce2 = _interopRequireDefault(require(\"./internal/_reduce.js\"));\nvar _curry = _interopRequireDefault(require(\"./curry.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Returns the number of items in a given `list` matching the predicate `f`\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} predicate to match items against\n * @return {Array} list of items to count in\n * @example\n *\n *      const even = x => x % 2 == 0;\n *\n *      R.count(even, [1, 2, 3, 4, 5]); // => 2\n *      R.map(R.count(even), [[1, 1, 1], [2, 3, 4, 5], [6]]); // => [0, 2, 1]\n */\n\nvar count = /*#__PURE__*/\n(0, _curry.default)(function (pred, list) {\n  return (0, _reduce2.default)(function (a, e) {\n    return pred(e) ? a + 1 : a;\n  }, 0, list);\n});\nvar _default = count;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":2,"column":31}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":19,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":4},"source":"node_modules/ramda/es/count.js","original":{"line":21,"column":4},"name":"count"},{"generated":{"line":28,"column":9},"source":"node_modules/ramda/es/count.js","original":{"line":21,"column":9}},{"generated":{"line":28,"column":12},"source":"node_modules/ramda/es/count.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":23,"column":0}},{"generated":{"line":29,"column":4},"source":"node_modules/ramda/es/count.js","original":{"line":23,"column":0},"name":"curry"},{"generated":{"line":29,"column":18},"source":"node_modules/ramda/es/count.js","original":{"line":23,"column":5}},{"generated":{"line":29,"column":20},"source":"node_modules/ramda/es/count.js","original":{"line":23,"column":6}},{"generated":{"line":29,"column":30},"source":"node_modules/ramda/es/count.js","original":{"line":23,"column":16},"name":"pred"},{"generated":{"line":29,"column":34},"source":"node_modules/ramda/es/count.js","original":{"line":23,"column":20}},{"generated":{"line":29,"column":36},"source":"node_modules/ramda/es/count.js","original":{"line":23,"column":22},"name":"list"},{"generated":{"line":29,"column":40},"source":"node_modules/ramda/es/count.js","original":{"line":23,"column":26}},{"generated":{"line":29,"column":42},"source":"node_modules/ramda/es/count.js","original":{"line":23,"column":28}},{"generated":{"line":30,"column":2},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":2}},{"generated":{"line":30,"column":9},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":9}},{"generated":{"line":30,"column":13},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":9},"name":"_reduce"},{"generated":{"line":30,"column":29},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":16}},{"generated":{"line":30,"column":31},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":17}},{"generated":{"line":30,"column":41},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":27},"name":"a"},{"generated":{"line":30,"column":42},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":28}},{"generated":{"line":30,"column":44},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":30},"name":"e"},{"generated":{"line":30,"column":45},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":31}},{"generated":{"line":30,"column":47},"source":"node_modules/ramda/es/count.js","original":{"line":24,"column":33}},{"generated":{"line":31,"column":4},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":4}},{"generated":{"line":31,"column":11},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":11},"name":"pred"},{"generated":{"line":31,"column":15},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":15}},{"generated":{"line":31,"column":16},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":16},"name":"e"},{"generated":{"line":31,"column":17},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":17}},{"generated":{"line":31,"column":18},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":18}},{"generated":{"line":31,"column":21},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":21},"name":"a"},{"generated":{"line":31,"column":22},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":22}},{"generated":{"line":31,"column":25},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":25}},{"generated":{"line":31,"column":26},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":26}},{"generated":{"line":31,"column":29},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":29},"name":"a"},{"generated":{"line":31,"column":30},"source":"node_modules/ramda/es/count.js","original":{"line":25,"column":30}},{"generated":{"line":32,"column":2},"source":"node_modules/ramda/es/count.js","original":{"line":26,"column":2}},{"generated":{"line":32,"column":3},"source":"node_modules/ramda/es/count.js","original":{"line":26,"column":3}},{"generated":{"line":32,"column":5},"source":"node_modules/ramda/es/count.js","original":{"line":26,"column":5}},{"generated":{"line":32,"column":6},"source":"node_modules/ramda/es/count.js","original":{"line":26,"column":6}},{"generated":{"line":32,"column":8},"source":"node_modules/ramda/es/count.js","original":{"line":26,"column":8},"name":"list"},{"generated":{"line":32,"column":12},"source":"node_modules/ramda/es/count.js","original":{"line":26,"column":12}},{"generated":{"line":32,"column":13},"source":"node_modules/ramda/es/count.js","original":{"line":26,"column":13}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":27,"column":0}},{"generated":{"line":33,"column":1},"source":"node_modules/ramda/es/count.js","original":{"line":27,"column":1}},{"generated":{"line":33,"column":2},"source":"node_modules/ramda/es/count.js","original":{"line":27,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":27,"column":3}},{"generated":{"line":34,"column":15},"source":"node_modules/ramda/es/count.js","original":{"line":28,"column":15},"name":"count"},{"generated":{"line":34,"column":20},"source":"node_modules/ramda/es/count.js","original":{"line":28,"column":20}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/count.js","original":{"line":28,"column":20}}],"sources":{"node_modules/ramda/es/count.js":"import _reduce from \"./internal/_reduce.js\";\nimport curry from \"./curry.js\";\n/**\n * Returns the number of items in a given `list` matching the predicate `f`\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} predicate to match items against\n * @return {Array} list of items to count in\n * @example\n *\n *      const even = x => x % 2 == 0;\n *\n *      R.count(even, [1, 2, 3, 4, 5]); // => 2\n *      R.map(R.count(even), [[1, 1, 1], [2, 3, 4, 5], [6]]); // => [0, 2, 1]\n */\n\nvar count =\n/*#__PURE__*/\ncurry(function (pred, list) {\n  return _reduce(function (a, e) {\n    return pred(e) ? a + 1 : a;\n  }, 0, list);\n});\nexport default count;"},"lineCount":null}},"error":null,"hash":"14f8d15802ae18410dca8ff7a38fefe3","cacheData":{"env":{}}}