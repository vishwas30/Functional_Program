{"id":"node_modules/ramda/es/pipe.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_arity.js","loc":{"line":1,"column":19,"index":19},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/pipe.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_arity.js"},{"name":"./internal/_pipe.js","loc":{"line":2,"column":18,"index":61},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/pipe.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_pipe.js"},{"name":"./reduce.js","loc":{"line":3,"column":19,"index":103},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/pipe.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/reduce.js"},{"name":"./tail.js","loc":{"line":4,"column":17,"index":135},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/pipe.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/tail.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pipe;\nvar _arity2 = _interopRequireDefault(require(\"./internal/_arity.js\"));\nvar _pipe2 = _interopRequireDefault(require(\"./internal/_pipe.js\"));\nvar _reduce = _interopRequireDefault(require(\"./reduce.js\"));\nvar _tail = _interopRequireDefault(require(\"./tail.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\n\nfunction pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return (0, _arity2.default)(arguments[0].length, (0, _reduce.default)(_pipe2.default, arguments[0], (0, _tail.default)(arguments)));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":4,"column":29}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":28,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":30,"column":15}},{"generated":{"line":37,"column":9},"source":"node_modules/ramda/es/pipe.js","original":{"line":30,"column":24},"name":"pipe"},{"generated":{"line":37,"column":13},"source":"node_modules/ramda/es/pipe.js","original":{"line":30,"column":28}},{"generated":{"line":37,"column":16},"source":"node_modules/ramda/es/pipe.js","original":{"line":30,"column":31}},{"generated":{"line":38,"column":2},"source":"node_modules/ramda/es/pipe.js","original":{"line":31,"column":2}},{"generated":{"line":38,"column":6},"source":"node_modules/ramda/es/pipe.js","original":{"line":31,"column":6},"name":"arguments"},{"generated":{"line":38,"column":15},"source":"node_modules/ramda/es/pipe.js","original":{"line":31,"column":15}},{"generated":{"line":38,"column":16},"source":"node_modules/ramda/es/pipe.js","original":{"line":31,"column":16},"name":"length"},{"generated":{"line":38,"column":22},"source":"node_modules/ramda/es/pipe.js","original":{"line":31,"column":22}},{"generated":{"line":38,"column":27},"source":"node_modules/ramda/es/pipe.js","original":{"line":31,"column":27}},{"generated":{"line":38,"column":28},"source":"node_modules/ramda/es/pipe.js","original":{"line":31,"column":28}},{"generated":{"line":38,"column":30},"source":"node_modules/ramda/es/pipe.js","original":{"line":31,"column":30}},{"generated":{"line":39,"column":4},"source":"node_modules/ramda/es/pipe.js","original":{"line":32,"column":4}},{"generated":{"line":39,"column":10},"source":"node_modules/ramda/es/pipe.js","original":{"line":32,"column":10}},{"generated":{"line":39,"column":14},"source":"node_modules/ramda/es/pipe.js","original":{"line":32,"column":14},"name":"Error"},{"generated":{"line":39,"column":19},"source":"node_modules/ramda/es/pipe.js","original":{"line":32,"column":19}},{"generated":{"line":39,"column":20},"source":"node_modules/ramda/es/pipe.js","original":{"line":32,"column":20}},{"generated":{"line":39,"column":57},"source":"node_modules/ramda/es/pipe.js","original":{"line":32,"column":57}},{"generated":{"line":39,"column":58},"source":"node_modules/ramda/es/pipe.js","original":{"line":32,"column":58}},{"generated":{"line":40,"column":2},"source":"node_modules/ramda/es/pipe.js","original":{"line":33,"column":2}},{"generated":{"line":41,"column":2},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":2}},{"generated":{"line":41,"column":9},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":9}},{"generated":{"line":41,"column":13},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":9},"name":"_arity"},{"generated":{"line":41,"column":28},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":15}},{"generated":{"line":41,"column":30},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":16},"name":"arguments"},{"generated":{"line":41,"column":39},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":25}},{"generated":{"line":41,"column":40},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":26}},{"generated":{"line":41,"column":41},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":27}},{"generated":{"line":41,"column":42},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":28}},{"generated":{"line":41,"column":43},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":29},"name":"length"},{"generated":{"line":41,"column":49},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":35}},{"generated":{"line":41,"column":51},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":37}},{"generated":{"line":41,"column":55},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":37},"name":"reduce"},{"generated":{"line":41,"column":70},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":43}},{"generated":{"line":41,"column":72},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":44},"name":"_pipe"},{"generated":{"line":41,"column":86},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":49}},{"generated":{"line":41,"column":88},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":51},"name":"arguments"},{"generated":{"line":41,"column":97},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":60}},{"generated":{"line":41,"column":98},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":61}},{"generated":{"line":41,"column":99},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":62}},{"generated":{"line":41,"column":100},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":63}},{"generated":{"line":41,"column":102},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":65}},{"generated":{"line":41,"column":106},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":65},"name":"tail"},{"generated":{"line":41,"column":119},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":69}},{"generated":{"line":41,"column":121},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":70},"name":"arguments"},{"generated":{"line":41,"column":130},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":79}},{"generated":{"line":41,"column":131},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":80}},{"generated":{"line":41,"column":132},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":81}},{"generated":{"line":41,"column":133},"source":"node_modules/ramda/es/pipe.js","original":{"line":35,"column":82}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/pipe.js","original":{"line":36,"column":0}}],"sources":{"node_modules/ramda/es/pipe.js":"import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}"},"lineCount":null}},"error":null,"hash":"4d3e23ea04e0ee4ecf2235621aa9435a","cacheData":{"env":{}}}