{"id":"node_modules/ramda/es/reduceWhile.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curryN.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/reduceWhile.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curryN.js"},{"name":"./internal/_reduce.js","loc":{"line":2,"column":20,"index":65},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/reduceWhile.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_reduce.js"},{"name":"./internal/_reduced.js","loc":{"line":3,"column":21,"index":111},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/reduceWhile.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_reduced.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curryN2 = _interopRequireDefault(require(\"./internal/_curryN.js\"));\nvar _reduce2 = _interopRequireDefault(require(\"./internal/_reduce.js\"));\nvar _reduced2 = _interopRequireDefault(require(\"./internal/_reduced.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator. `reduceWhile` may alternatively be short-circuited\n * via [`reduced`](#reduced).\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 !== 0;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\nvar reduceWhile = /*#__PURE__*/\n(0, _curryN2.default)(4, [], function _reduceWhile(pred, fn, a, list) {\n  return (0, _reduce2.default)(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : (0, _reduced2.default)(acc);\n  }, a, list);\n});\nvar _default = reduceWhile;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":3,"column":46}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":28,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":29,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":30,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":31,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":32,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":33,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":4},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":35,"column":4},"name":"reduceWhile"},{"generated":{"line":42,"column":15},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":35,"column":15}},{"generated":{"line":42,"column":18},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":0}},{"generated":{"line":43,"column":4},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":0},"name":"_curryN"},{"generated":{"line":43,"column":20},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":7}},{"generated":{"line":43,"column":22},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":8}},{"generated":{"line":43,"column":23},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":9}},{"generated":{"line":43,"column":25},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":11}},{"generated":{"line":43,"column":27},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":13}},{"generated":{"line":43,"column":29},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":15}},{"generated":{"line":43,"column":38},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":24},"name":"_reduceWhile"},{"generated":{"line":43,"column":50},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":36}},{"generated":{"line":43,"column":51},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":37},"name":"pred"},{"generated":{"line":43,"column":55},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":41}},{"generated":{"line":43,"column":57},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":43},"name":"fn"},{"generated":{"line":43,"column":59},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":45}},{"generated":{"line":43,"column":61},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":47},"name":"a"},{"generated":{"line":43,"column":62},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":48}},{"generated":{"line":43,"column":64},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":50},"name":"list"},{"generated":{"line":43,"column":68},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":54}},{"generated":{"line":43,"column":70},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":37,"column":56}},{"generated":{"line":44,"column":2},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":2}},{"generated":{"line":44,"column":9},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":9}},{"generated":{"line":44,"column":13},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":9},"name":"_reduce"},{"generated":{"line":44,"column":29},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":16}},{"generated":{"line":44,"column":31},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":17}},{"generated":{"line":44,"column":41},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":27},"name":"acc"},{"generated":{"line":44,"column":44},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":30}},{"generated":{"line":44,"column":46},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":32},"name":"x"},{"generated":{"line":44,"column":47},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":33}},{"generated":{"line":44,"column":49},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":38,"column":35}},{"generated":{"line":45,"column":4},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":4}},{"generated":{"line":45,"column":11},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":11},"name":"pred"},{"generated":{"line":45,"column":15},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":15}},{"generated":{"line":45,"column":16},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":16},"name":"acc"},{"generated":{"line":45,"column":19},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":19}},{"generated":{"line":45,"column":21},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":21},"name":"x"},{"generated":{"line":45,"column":22},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":22}},{"generated":{"line":45,"column":23},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":23}},{"generated":{"line":45,"column":26},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":26},"name":"fn"},{"generated":{"line":45,"column":28},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":28}},{"generated":{"line":45,"column":29},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":29},"name":"acc"},{"generated":{"line":45,"column":32},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":32}},{"generated":{"line":45,"column":34},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":34},"name":"x"},{"generated":{"line":45,"column":35},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":35}},{"generated":{"line":45,"column":36},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":36}},{"generated":{"line":45,"column":39},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":39}},{"generated":{"line":45,"column":43},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":39},"name":"_reduced"},{"generated":{"line":45,"column":60},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":47}},{"generated":{"line":45,"column":62},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":48},"name":"acc"},{"generated":{"line":45,"column":65},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":51}},{"generated":{"line":45,"column":66},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":39,"column":52}},{"generated":{"line":46,"column":2},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":40,"column":2}},{"generated":{"line":46,"column":3},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":40,"column":3}},{"generated":{"line":46,"column":5},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":40,"column":5},"name":"a"},{"generated":{"line":46,"column":6},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":40,"column":6}},{"generated":{"line":46,"column":8},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":40,"column":8},"name":"list"},{"generated":{"line":46,"column":12},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":40,"column":12}},{"generated":{"line":46,"column":13},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":40,"column":13}},{"generated":{"line":47,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":41,"column":0}},{"generated":{"line":47,"column":1},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":41,"column":1}},{"generated":{"line":47,"column":2},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":41,"column":2}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":41,"column":3}},{"generated":{"line":48,"column":15},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":43,"column":15},"name":"reduceWhile"},{"generated":{"line":48,"column":26},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":43,"column":26}},{"generated":{"line":49,"column":0},"source":"node_modules/ramda/es/reduceWhile.js","original":{"line":43,"column":26}}],"sources":{"node_modules/ramda/es/reduceWhile.js":"import _curryN from \"./internal/_curryN.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator. `reduceWhile` may alternatively be short-circuited\n * via [`reduced`](#reduced).\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 !== 0;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\nvar reduceWhile =\n/*#__PURE__*/\n_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\nexport default reduceWhile;"},"lineCount":null}},"error":null,"hash":"22feec27a50bbe1eb2af49d56591e383","cacheData":{"env":{}}}