{"id":"node_modules/ramda/es/divide.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/divide.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\nvar divide = /*#__PURE__*/\n(0, _curry.default)(function divide(a, b) {\n  return a / b;\n});\nvar _default = divide;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":1,"column":44}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":23,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":4},"source":"node_modules/ramda/es/divide.js","original":{"line":25,"column":4},"name":"divide"},{"generated":{"line":32,"column":10},"source":"node_modules/ramda/es/divide.js","original":{"line":25,"column":10}},{"generated":{"line":32,"column":13},"source":"node_modules/ramda/es/divide.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":0}},{"generated":{"line":33,"column":4},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":0},"name":"_curry2"},{"generated":{"line":33,"column":18},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":7}},{"generated":{"line":33,"column":20},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":8}},{"generated":{"line":33,"column":29},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":17},"name":"divide"},{"generated":{"line":33,"column":35},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":23}},{"generated":{"line":33,"column":36},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":24},"name":"a"},{"generated":{"line":33,"column":37},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":25}},{"generated":{"line":33,"column":39},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":27},"name":"b"},{"generated":{"line":33,"column":40},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":28}},{"generated":{"line":33,"column":42},"source":"node_modules/ramda/es/divide.js","original":{"line":27,"column":30}},{"generated":{"line":34,"column":2},"source":"node_modules/ramda/es/divide.js","original":{"line":28,"column":2}},{"generated":{"line":34,"column":9},"source":"node_modules/ramda/es/divide.js","original":{"line":28,"column":9},"name":"a"},{"generated":{"line":34,"column":10},"source":"node_modules/ramda/es/divide.js","original":{"line":28,"column":10}},{"generated":{"line":34,"column":13},"source":"node_modules/ramda/es/divide.js","original":{"line":28,"column":13},"name":"b"},{"generated":{"line":34,"column":14},"source":"node_modules/ramda/es/divide.js","original":{"line":28,"column":14}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":29,"column":0}},{"generated":{"line":35,"column":1},"source":"node_modules/ramda/es/divide.js","original":{"line":29,"column":1}},{"generated":{"line":35,"column":2},"source":"node_modules/ramda/es/divide.js","original":{"line":29,"column":2}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":29,"column":3}},{"generated":{"line":36,"column":15},"source":"node_modules/ramda/es/divide.js","original":{"line":31,"column":15},"name":"divide"},{"generated":{"line":36,"column":21},"source":"node_modules/ramda/es/divide.js","original":{"line":31,"column":21}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/divide.js","original":{"line":31,"column":21}}],"sources":{"node_modules/ramda/es/divide.js":"import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\nvar divide =\n/*#__PURE__*/\n_curry2(function divide(a, b) {\n  return a / b;\n});\n\nexport default divide;"},"lineCount":null}},"error":null,"hash":"a2ba6e89d60c0a26573158772627bb70","cacheData":{"env":{}}}