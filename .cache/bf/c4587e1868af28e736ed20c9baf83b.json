{"id":"node_modules/ramda/es/promap.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/promap.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry3.js"},{"name":"./internal/_dispatchable.js","loc":{"line":2,"column":26,"index":71},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/promap.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_dispatchable.js"},{"name":"./internal/_promap.js","loc":{"line":3,"column":20,"index":122},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/promap.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_promap.js"},{"name":"./internal/_xpromap.js","loc":{"line":4,"column":21,"index":168},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/promap.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_xpromap.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable.js\"));\nvar _promap2 = _interopRequireDefault(require(\"./internal/_promap.js\"));\nvar _xpromap2 = _interopRequireDefault(require(\"./internal/_xpromap.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Takes two functions as pre- and post- processors respectively for a third function,\n * i.e. `promap(f, g, h)(x) === g(h(f(x)))`.\n *\n * Dispatches to the `promap` method of the third argument, if present,\n * according to the [FantasyLand Profunctor spec](https://github.com/fantasyland/fantasy-land#profunctor).\n *\n * Acts as a transducer if a transformer is given in profunctor position.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (a -> b) -> (c -> d) -> (b -> c) -> (a -> d)\n * @sig Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n * @param {Function} f The preprocessor function, a -> b\n * @param {Function} g The postprocessor function, c -> d\n * @param {Profunctor} profunctor The profunctor instance to be promapped, e.g. b -> c\n * @return {Profunctor} The new profunctor instance, e.g. a -> d\n * @see R.transduce\n * @example\n *\n *      const decodeChar = R.promap(s => s.charCodeAt(), String.fromCharCode, R.add(-8))\n *      const decodeString = R.promap(R.split(''), R.join(''), R.map(decodeChar))\n *      decodeString(\"ziuli\") //=> \"ramda\"\n *\n * @symb R.promap(f, g, h) = x => g(h(f(x)))\n * @symb R.promap(f, g, profunctor) = profunctor.promap(f, g)\n */\n\nvar promap = /*#__PURE__*/\n(0, _curry.default)( /*#__PURE__*/\n(0, _dispatchable2.default)(['fantasy-land/promap', 'promap'], _xpromap2.default, _promap2.default));\nvar _default = promap;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":4,"column":46}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":28,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":29,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":30,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":31,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":32,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":33,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":4},"source":"node_modules/ramda/es/promap.js","original":{"line":35,"column":4},"name":"promap"},{"generated":{"line":42,"column":10},"source":"node_modules/ramda/es/promap.js","original":{"line":35,"column":10}},{"generated":{"line":42,"column":13},"source":"node_modules/ramda/es/promap.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":37,"column":0}},{"generated":{"line":43,"column":4},"source":"node_modules/ramda/es/promap.js","original":{"line":37,"column":0},"name":"_curry3"},{"generated":{"line":43,"column":18},"source":"node_modules/ramda/es/promap.js","original":{"line":37,"column":7}},{"generated":{"line":43,"column":21},"source":"node_modules/ramda/es/promap.js","original":{"line":38,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":0}},{"generated":{"line":44,"column":4},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":0},"name":"_dispatchable"},{"generated":{"line":44,"column":26},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":13}},{"generated":{"line":44,"column":28},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":14}},{"generated":{"line":44,"column":29},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":15}},{"generated":{"line":44,"column":50},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":36}},{"generated":{"line":44,"column":52},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":38}},{"generated":{"line":44,"column":60},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":46}},{"generated":{"line":44,"column":61},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":47}},{"generated":{"line":44,"column":63},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":49},"name":"_xpromap"},{"generated":{"line":44,"column":80},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":57}},{"generated":{"line":44,"column":82},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":59},"name":"_promap"},{"generated":{"line":44,"column":98},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":66}},{"generated":{"line":44,"column":99},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":67}},{"generated":{"line":44,"column":100},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":68}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":39,"column":69}},{"generated":{"line":45,"column":15},"source":"node_modules/ramda/es/promap.js","original":{"line":41,"column":15},"name":"promap"},{"generated":{"line":45,"column":21},"source":"node_modules/ramda/es/promap.js","original":{"line":41,"column":21}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/promap.js","original":{"line":41,"column":21}}],"sources":{"node_modules/ramda/es/promap.js":"import _curry3 from \"./internal/_curry3.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _promap from \"./internal/_promap.js\";\nimport _xpromap from \"./internal/_xpromap.js\";\n/**\n * Takes two functions as pre- and post- processors respectively for a third function,\n * i.e. `promap(f, g, h)(x) === g(h(f(x)))`.\n *\n * Dispatches to the `promap` method of the third argument, if present,\n * according to the [FantasyLand Profunctor spec](https://github.com/fantasyland/fantasy-land#profunctor).\n *\n * Acts as a transducer if a transformer is given in profunctor position.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (a -> b) -> (c -> d) -> (b -> c) -> (a -> d)\n * @sig Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n * @param {Function} f The preprocessor function, a -> b\n * @param {Function} g The postprocessor function, c -> d\n * @param {Profunctor} profunctor The profunctor instance to be promapped, e.g. b -> c\n * @return {Profunctor} The new profunctor instance, e.g. a -> d\n * @see R.transduce\n * @example\n *\n *      const decodeChar = R.promap(s => s.charCodeAt(), String.fromCharCode, R.add(-8))\n *      const decodeString = R.promap(R.split(''), R.join(''), R.map(decodeChar))\n *      decodeString(\"ziuli\") //=> \"ramda\"\n *\n * @symb R.promap(f, g, h) = x => g(h(f(x)))\n * @symb R.promap(f, g, profunctor) = profunctor.promap(f, g)\n */\n\nvar promap =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/promap', 'promap'], _xpromap, _promap));\n\nexport default promap;"},"lineCount":null}},"error":null,"hash":"164fb117cb32806f1593e65c5d9b5d3f","cacheData":{"env":{}}}