{"id":"node_modules/ramda/es/apply.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/apply.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\nvar apply = /*#__PURE__*/\n(0, _curry.default)(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nvar _default = apply;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":1,"column":44}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":21,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":4},"source":"node_modules/ramda/es/apply.js","original":{"line":23,"column":4},"name":"apply"},{"generated":{"line":30,"column":9},"source":"node_modules/ramda/es/apply.js","original":{"line":23,"column":9}},{"generated":{"line":30,"column":12},"source":"node_modules/ramda/es/apply.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":0}},{"generated":{"line":31,"column":4},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":0},"name":"_curry2"},{"generated":{"line":31,"column":18},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":7}},{"generated":{"line":31,"column":20},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":8}},{"generated":{"line":31,"column":29},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":17},"name":"apply"},{"generated":{"line":31,"column":34},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":22}},{"generated":{"line":31,"column":35},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":23},"name":"fn"},{"generated":{"line":31,"column":37},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":25}},{"generated":{"line":31,"column":39},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":27},"name":"args"},{"generated":{"line":31,"column":43},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":31}},{"generated":{"line":31,"column":45},"source":"node_modules/ramda/es/apply.js","original":{"line":25,"column":33}},{"generated":{"line":32,"column":2},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":2}},{"generated":{"line":32,"column":9},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":9},"name":"fn"},{"generated":{"line":32,"column":11},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":11}},{"generated":{"line":32,"column":12},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":12},"name":"apply"},{"generated":{"line":32,"column":17},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":17}},{"generated":{"line":32,"column":18},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":18}},{"generated":{"line":32,"column":22},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":22}},{"generated":{"line":32,"column":24},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":24},"name":"args"},{"generated":{"line":32,"column":28},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":28}},{"generated":{"line":32,"column":29},"source":"node_modules/ramda/es/apply.js","original":{"line":26,"column":29}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":27,"column":0}},{"generated":{"line":33,"column":1},"source":"node_modules/ramda/es/apply.js","original":{"line":27,"column":1}},{"generated":{"line":33,"column":2},"source":"node_modules/ramda/es/apply.js","original":{"line":27,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":27,"column":3}},{"generated":{"line":34,"column":15},"source":"node_modules/ramda/es/apply.js","original":{"line":29,"column":15},"name":"apply"},{"generated":{"line":34,"column":20},"source":"node_modules/ramda/es/apply.js","original":{"line":29,"column":20}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/apply.js","original":{"line":29,"column":20}}],"sources":{"node_modules/ramda/es/apply.js":"import _curry2 from \"./internal/_curry2.js\";\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\nvar apply =\n/*#__PURE__*/\n_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nexport default apply;"},"lineCount":null}},"error":null,"hash":"180a045bc41f5c40d384b479f61687f0","cacheData":{"env":{}}}