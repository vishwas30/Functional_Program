{"id":"node_modules/ramda/es/slice.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_checkForMethod.js","loc":{"line":1,"column":28,"index":28},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/slice.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_checkForMethod.js"},{"name":"./internal/_curry3.js","loc":{"line":2,"column":20,"index":81},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/slice.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry3.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _checkForMethod2 = _interopRequireDefault(require(\"./internal/_checkForMethod.js\"));\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice = /*#__PURE__*/\n(0, _curry.default)( /*#__PURE__*/\n(0, _checkForMethod2.default)('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nvar _default = slice;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":2,"column":44}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":26,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":4},"source":"node_modules/ramda/es/slice.js","original":{"line":28,"column":4},"name":"slice"},{"generated":{"line":35,"column":9},"source":"node_modules/ramda/es/slice.js","original":{"line":28,"column":9}},{"generated":{"line":35,"column":12},"source":"node_modules/ramda/es/slice.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":30,"column":0}},{"generated":{"line":36,"column":4},"source":"node_modules/ramda/es/slice.js","original":{"line":30,"column":0},"name":"_curry3"},{"generated":{"line":36,"column":18},"source":"node_modules/ramda/es/slice.js","original":{"line":30,"column":7}},{"generated":{"line":36,"column":21},"source":"node_modules/ramda/es/slice.js","original":{"line":31,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":0}},{"generated":{"line":37,"column":4},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":0},"name":"_checkForMethod"},{"generated":{"line":37,"column":28},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":15}},{"generated":{"line":37,"column":30},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":16}},{"generated":{"line":37,"column":37},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":23}},{"generated":{"line":37,"column":39},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":25}},{"generated":{"line":37,"column":48},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":34},"name":"slice"},{"generated":{"line":37,"column":53},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":39}},{"generated":{"line":37,"column":54},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":40},"name":"fromIndex"},{"generated":{"line":37,"column":63},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":49}},{"generated":{"line":37,"column":65},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":51},"name":"toIndex"},{"generated":{"line":37,"column":72},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":58}},{"generated":{"line":37,"column":74},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":60},"name":"list"},{"generated":{"line":37,"column":78},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":64}},{"generated":{"line":37,"column":80},"source":"node_modules/ramda/es/slice.js","original":{"line":32,"column":66}},{"generated":{"line":38,"column":2},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":2}},{"generated":{"line":38,"column":9},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":9},"name":"Array"},{"generated":{"line":38,"column":14},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":14}},{"generated":{"line":38,"column":15},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":15},"name":"prototype"},{"generated":{"line":38,"column":24},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":24}},{"generated":{"line":38,"column":25},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":25},"name":"slice"},{"generated":{"line":38,"column":30},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":30}},{"generated":{"line":38,"column":31},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":31},"name":"call"},{"generated":{"line":38,"column":35},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":35}},{"generated":{"line":38,"column":36},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":36},"name":"list"},{"generated":{"line":38,"column":40},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":40}},{"generated":{"line":38,"column":42},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":42},"name":"fromIndex"},{"generated":{"line":38,"column":51},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":51}},{"generated":{"line":38,"column":53},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":53},"name":"toIndex"},{"generated":{"line":38,"column":60},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":60}},{"generated":{"line":38,"column":61},"source":"node_modules/ramda/es/slice.js","original":{"line":33,"column":61}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":34,"column":0}},{"generated":{"line":39,"column":1},"source":"node_modules/ramda/es/slice.js","original":{"line":34,"column":1}},{"generated":{"line":39,"column":2},"source":"node_modules/ramda/es/slice.js","original":{"line":34,"column":2}},{"generated":{"line":39,"column":3},"source":"node_modules/ramda/es/slice.js","original":{"line":34,"column":3}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":34,"column":4}},{"generated":{"line":40,"column":15},"source":"node_modules/ramda/es/slice.js","original":{"line":36,"column":15},"name":"slice"},{"generated":{"line":40,"column":20},"source":"node_modules/ramda/es/slice.js","original":{"line":36,"column":20}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/slice.js","original":{"line":36,"column":20}}],"sources":{"node_modules/ramda/es/slice.js":"import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;"},"lineCount":null}},"error":null,"hash":"12e3a83d3dd4e2d1df4b98ad5f0dd07e","cacheData":{"env":{}}}