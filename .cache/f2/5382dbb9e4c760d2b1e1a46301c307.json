{"id":"node_modules/ramda/es/any.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/any.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry2.js"},{"name":"./internal/_dispatchable.js","loc":{"line":2,"column":26,"index":71},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/any.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_dispatchable.js"},{"name":"./internal/_xany.js","loc":{"line":3,"column":18,"index":120},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/any.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_xany.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable.js\"));\nvar _xany2 = _interopRequireDefault(require(\"./internal/_xany.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any = /*#__PURE__*/\n(0, _curry.default)( /*#__PURE__*/\n(0, _dispatchable2.default)(['any'], _xany2.default, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nvar _default = any;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":3,"column":40}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":26,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":28,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":4},"source":"node_modules/ramda/es/any.js","original":{"line":30,"column":4},"name":"any"},{"generated":{"line":37,"column":7},"source":"node_modules/ramda/es/any.js","original":{"line":30,"column":7}},{"generated":{"line":37,"column":10},"source":"node_modules/ramda/es/any.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":32,"column":0}},{"generated":{"line":38,"column":4},"source":"node_modules/ramda/es/any.js","original":{"line":32,"column":0},"name":"_curry2"},{"generated":{"line":38,"column":18},"source":"node_modules/ramda/es/any.js","original":{"line":32,"column":7}},{"generated":{"line":38,"column":21},"source":"node_modules/ramda/es/any.js","original":{"line":33,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":0}},{"generated":{"line":39,"column":4},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":0},"name":"_dispatchable"},{"generated":{"line":39,"column":26},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":13}},{"generated":{"line":39,"column":28},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":14}},{"generated":{"line":39,"column":29},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":15}},{"generated":{"line":39,"column":34},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":20}},{"generated":{"line":39,"column":35},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":21}},{"generated":{"line":39,"column":37},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":23},"name":"_xany"},{"generated":{"line":39,"column":51},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":28}},{"generated":{"line":39,"column":53},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":30}},{"generated":{"line":39,"column":62},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":39},"name":"any"},{"generated":{"line":39,"column":65},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":42}},{"generated":{"line":39,"column":66},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":43},"name":"fn"},{"generated":{"line":39,"column":68},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":45}},{"generated":{"line":39,"column":70},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":47},"name":"list"},{"generated":{"line":39,"column":74},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":51}},{"generated":{"line":39,"column":76},"source":"node_modules/ramda/es/any.js","original":{"line":34,"column":53}},{"generated":{"line":40,"column":2},"source":"node_modules/ramda/es/any.js","original":{"line":35,"column":2}},{"generated":{"line":40,"column":6},"source":"node_modules/ramda/es/any.js","original":{"line":35,"column":6},"name":"idx"},{"generated":{"line":40,"column":9},"source":"node_modules/ramda/es/any.js","original":{"line":35,"column":9}},{"generated":{"line":40,"column":12},"source":"node_modules/ramda/es/any.js","original":{"line":35,"column":12}},{"generated":{"line":40,"column":13},"source":"node_modules/ramda/es/any.js","original":{"line":35,"column":13}},{"generated":{"line":41,"column":2},"source":"node_modules/ramda/es/any.js","original":{"line":37,"column":2}},{"generated":{"line":41,"column":9},"source":"node_modules/ramda/es/any.js","original":{"line":37,"column":9},"name":"idx"},{"generated":{"line":41,"column":12},"source":"node_modules/ramda/es/any.js","original":{"line":37,"column":12}},{"generated":{"line":41,"column":15},"source":"node_modules/ramda/es/any.js","original":{"line":37,"column":15},"name":"list"},{"generated":{"line":41,"column":19},"source":"node_modules/ramda/es/any.js","original":{"line":37,"column":19}},{"generated":{"line":41,"column":20},"source":"node_modules/ramda/es/any.js","original":{"line":37,"column":20},"name":"length"},{"generated":{"line":41,"column":26},"source":"node_modules/ramda/es/any.js","original":{"line":37,"column":26}},{"generated":{"line":41,"column":28},"source":"node_modules/ramda/es/any.js","original":{"line":37,"column":28}},{"generated":{"line":42,"column":4},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":4}},{"generated":{"line":42,"column":8},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":8},"name":"fn"},{"generated":{"line":42,"column":10},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":10}},{"generated":{"line":42,"column":11},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":11},"name":"list"},{"generated":{"line":42,"column":15},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":15}},{"generated":{"line":42,"column":16},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":16},"name":"idx"},{"generated":{"line":42,"column":19},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":19}},{"generated":{"line":42,"column":20},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":20}},{"generated":{"line":42,"column":21},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":21}},{"generated":{"line":42,"column":23},"source":"node_modules/ramda/es/any.js","original":{"line":38,"column":23}},{"generated":{"line":43,"column":6},"source":"node_modules/ramda/es/any.js","original":{"line":39,"column":6}},{"generated":{"line":43,"column":13},"source":"node_modules/ramda/es/any.js","original":{"line":39,"column":13}},{"generated":{"line":43,"column":17},"source":"node_modules/ramda/es/any.js","original":{"line":39,"column":17}},{"generated":{"line":44,"column":4},"source":"node_modules/ramda/es/any.js","original":{"line":40,"column":4}},{"generated":{"line":45,"column":4},"source":"node_modules/ramda/es/any.js","original":{"line":42,"column":4},"name":"idx"},{"generated":{"line":45,"column":7},"source":"node_modules/ramda/es/any.js","original":{"line":42,"column":7}},{"generated":{"line":45,"column":11},"source":"node_modules/ramda/es/any.js","original":{"line":42,"column":11}},{"generated":{"line":45,"column":12},"source":"node_modules/ramda/es/any.js","original":{"line":42,"column":12}},{"generated":{"line":46,"column":2},"source":"node_modules/ramda/es/any.js","original":{"line":43,"column":2}},{"generated":{"line":47,"column":2},"source":"node_modules/ramda/es/any.js","original":{"line":45,"column":2}},{"generated":{"line":47,"column":9},"source":"node_modules/ramda/es/any.js","original":{"line":45,"column":9}},{"generated":{"line":47,"column":14},"source":"node_modules/ramda/es/any.js","original":{"line":45,"column":14}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":46,"column":0}},{"generated":{"line":48,"column":1},"source":"node_modules/ramda/es/any.js","original":{"line":46,"column":1}},{"generated":{"line":48,"column":2},"source":"node_modules/ramda/es/any.js","original":{"line":46,"column":2}},{"generated":{"line":48,"column":3},"source":"node_modules/ramda/es/any.js","original":{"line":46,"column":3}},{"generated":{"line":49,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":46,"column":4}},{"generated":{"line":49,"column":15},"source":"node_modules/ramda/es/any.js","original":{"line":48,"column":15},"name":"any"},{"generated":{"line":49,"column":18},"source":"node_modules/ramda/es/any.js","original":{"line":48,"column":18}},{"generated":{"line":50,"column":0},"source":"node_modules/ramda/es/any.js","original":{"line":48,"column":18}}],"sources":{"node_modules/ramda/es/any.js":"import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xany from \"./internal/_xany.js\";\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;"},"lineCount":null}},"error":null,"hash":"97b7d2ff8ef72f07e495c558c6c2ad8b","cacheData":{"env":{}}}