{"id":"node_modules/ramda/es/on.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curryN.js","loc":{"line":1,"column":19,"index":19},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/on.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curryN.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curryN = _interopRequireDefault(require(\"./internal/_curryN.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Takes a binary function `f`, a unary function `g`, and two values.\n * Applies `g` to each value, then applies the result of each to `f`.\n *\n * Also known as the P combinator.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig ((a, a) -> b) -> (c -> a) -> c -> c -> b\n * @param {Function} f a binary function\n * @param {Function} g a unary function\n * @param {any} a any value\n * @param {any} b any value\n * @return {any} The result of `f`\n * @example\n *\n *      const eqBy = R.on((a, b) => a === b);\n *      eqBy(R.prop('a'), {b:0, a:1}, {a:1}) //=> true;\n *\n *      const containsInsensitive = R.on(R.contains, R.toLower);\n *      containsInsensitive('o', 'FOO'); //=> true\n * @symb R.on(f, g, a, b) = f(g(a), g(b))\n */\n\nvar on = /*#__PURE__*/\n(0, _curryN.default)(4, [], function on(f, g, a, b) {\n  return f(g(a), g(b));\n});\nvar _default = on;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":1,"column":43}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":21,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":24,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":26,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":4},"source":"node_modules/ramda/es/on.js","original":{"line":28,"column":4},"name":"on"},{"generated":{"line":35,"column":6},"source":"node_modules/ramda/es/on.js","original":{"line":28,"column":6}},{"generated":{"line":35,"column":9},"source":"node_modules/ramda/es/on.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":0}},{"generated":{"line":36,"column":4},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":0},"name":"curryN"},{"generated":{"line":36,"column":19},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":6}},{"generated":{"line":36,"column":21},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":7}},{"generated":{"line":36,"column":22},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":8}},{"generated":{"line":36,"column":24},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":10}},{"generated":{"line":36,"column":26},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":12}},{"generated":{"line":36,"column":28},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":14}},{"generated":{"line":36,"column":37},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":23},"name":"on"},{"generated":{"line":36,"column":39},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":25}},{"generated":{"line":36,"column":40},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":26},"name":"f"},{"generated":{"line":36,"column":41},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":27}},{"generated":{"line":36,"column":43},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":29},"name":"g"},{"generated":{"line":36,"column":44},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":30}},{"generated":{"line":36,"column":46},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":32},"name":"a"},{"generated":{"line":36,"column":47},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":33}},{"generated":{"line":36,"column":49},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":35},"name":"b"},{"generated":{"line":36,"column":50},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":36}},{"generated":{"line":36,"column":52},"source":"node_modules/ramda/es/on.js","original":{"line":30,"column":38}},{"generated":{"line":37,"column":2},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":2}},{"generated":{"line":37,"column":9},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":9},"name":"f"},{"generated":{"line":37,"column":10},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":10}},{"generated":{"line":37,"column":11},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":11},"name":"g"},{"generated":{"line":37,"column":12},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":12}},{"generated":{"line":37,"column":13},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":13},"name":"a"},{"generated":{"line":37,"column":14},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":14}},{"generated":{"line":37,"column":15},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":15}},{"generated":{"line":37,"column":17},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":17},"name":"g"},{"generated":{"line":37,"column":18},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":18}},{"generated":{"line":37,"column":19},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":19},"name":"b"},{"generated":{"line":37,"column":20},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":20}},{"generated":{"line":37,"column":21},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":21}},{"generated":{"line":37,"column":22},"source":"node_modules/ramda/es/on.js","original":{"line":31,"column":22}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":32,"column":0}},{"generated":{"line":38,"column":1},"source":"node_modules/ramda/es/on.js","original":{"line":32,"column":1}},{"generated":{"line":38,"column":2},"source":"node_modules/ramda/es/on.js","original":{"line":32,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":32,"column":3}},{"generated":{"line":39,"column":15},"source":"node_modules/ramda/es/on.js","original":{"line":33,"column":15},"name":"on"},{"generated":{"line":39,"column":17},"source":"node_modules/ramda/es/on.js","original":{"line":33,"column":17}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/on.js","original":{"line":33,"column":17}}],"sources":{"node_modules/ramda/es/on.js":"import curryN from \"./internal/_curryN.js\";\n/**\n * Takes a binary function `f`, a unary function `g`, and two values.\n * Applies `g` to each value, then applies the result of each to `f`.\n *\n * Also known as the P combinator.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig ((a, a) -> b) -> (c -> a) -> c -> c -> b\n * @param {Function} f a binary function\n * @param {Function} g a unary function\n * @param {any} a any value\n * @param {any} b any value\n * @return {any} The result of `f`\n * @example\n *\n *      const eqBy = R.on((a, b) => a === b);\n *      eqBy(R.prop('a'), {b:0, a:1}, {a:1}) //=> true;\n *\n *      const containsInsensitive = R.on(R.contains, R.toLower);\n *      containsInsensitive('o', 'FOO'); //=> true\n * @symb R.on(f, g, a, b) = f(g(a), g(b))\n */\n\nvar on =\n/*#__PURE__*/\ncurryN(4, [], function on(f, g, a, b) {\n  return f(g(a), g(b));\n});\nexport default on;"},"lineCount":null}},"error":null,"hash":"2f599bb21943160c0948bf1790a16d5d","cacheData":{"env":{}}}