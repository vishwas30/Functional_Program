{"id":"node_modules/ramda/es/always.js","dependencies":[{"name":"/Users/chiragdev/Documents/Training/JS-Console/package.json","includedInParent":true,"mtime":1669619765108},{"name":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20,"index":20},"parent":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/always.js","resolved":"/Users/chiragdev/Documents/Training/JS-Console/node_modules/ramda/es/internal/_curry1.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always = /*#__PURE__*/\n(0, _curry.default)(function always(val) {\n  return function () {\n    return val;\n  };\n});\nvar _default = always;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":1,"column":44}},{"generated":{"line":9,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":20,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":4},"source":"node_modules/ramda/es/always.js","original":{"line":22,"column":4},"name":"always"},{"generated":{"line":29,"column":10},"source":"node_modules/ramda/es/always.js","original":{"line":22,"column":10}},{"generated":{"line":29,"column":13},"source":"node_modules/ramda/es/always.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":24,"column":0}},{"generated":{"line":30,"column":4},"source":"node_modules/ramda/es/always.js","original":{"line":24,"column":0},"name":"_curry1"},{"generated":{"line":30,"column":18},"source":"node_modules/ramda/es/always.js","original":{"line":24,"column":7}},{"generated":{"line":30,"column":20},"source":"node_modules/ramda/es/always.js","original":{"line":24,"column":8}},{"generated":{"line":30,"column":29},"source":"node_modules/ramda/es/always.js","original":{"line":24,"column":17},"name":"always"},{"generated":{"line":30,"column":35},"source":"node_modules/ramda/es/always.js","original":{"line":24,"column":23}},{"generated":{"line":30,"column":36},"source":"node_modules/ramda/es/always.js","original":{"line":24,"column":24},"name":"val"},{"generated":{"line":30,"column":39},"source":"node_modules/ramda/es/always.js","original":{"line":24,"column":27}},{"generated":{"line":30,"column":41},"source":"node_modules/ramda/es/always.js","original":{"line":24,"column":29}},{"generated":{"line":31,"column":2},"source":"node_modules/ramda/es/always.js","original":{"line":25,"column":2}},{"generated":{"line":31,"column":9},"source":"node_modules/ramda/es/always.js","original":{"line":25,"column":9}},{"generated":{"line":31,"column":21},"source":"node_modules/ramda/es/always.js","original":{"line":25,"column":21}},{"generated":{"line":32,"column":4},"source":"node_modules/ramda/es/always.js","original":{"line":26,"column":4}},{"generated":{"line":32,"column":11},"source":"node_modules/ramda/es/always.js","original":{"line":26,"column":11},"name":"val"},{"generated":{"line":32,"column":14},"source":"node_modules/ramda/es/always.js","original":{"line":26,"column":14}},{"generated":{"line":33,"column":2},"source":"node_modules/ramda/es/always.js","original":{"line":27,"column":2}},{"generated":{"line":33,"column":3},"source":"node_modules/ramda/es/always.js","original":{"line":27,"column":3}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":28,"column":0}},{"generated":{"line":34,"column":1},"source":"node_modules/ramda/es/always.js","original":{"line":28,"column":1}},{"generated":{"line":34,"column":2},"source":"node_modules/ramda/es/always.js","original":{"line":28,"column":2}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":28,"column":3}},{"generated":{"line":35,"column":15},"source":"node_modules/ramda/es/always.js","original":{"line":30,"column":15},"name":"always"},{"generated":{"line":35,"column":21},"source":"node_modules/ramda/es/always.js","original":{"line":30,"column":21}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/always.js","original":{"line":30,"column":21}}],"sources":{"node_modules/ramda/es/always.js":"import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;"},"lineCount":null}},"error":null,"hash":"968a0508374845fa71d380fc3df9e8a7","cacheData":{"env":{}}}